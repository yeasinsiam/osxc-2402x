var reset_filter_clicked = false;
var page_clicked = false;
var order_changed = false;
var is_first_load = true;
var is_filtering = false;
var filter_ajax_request;
var filter_by_address = false;

jQuery(document).ready(function ($) {
  // if click on .divi-engine-grid-list-view-switcher button
  $(document).on(
    "touchstart click",
    ".divi-engine-grid-list-view-switcher button",
    function (event) {
      // prevent default action
      event.preventDefault();
      // get the current view
      var current_view = $(this).attr("data-grid-list-type");
      // get the cookie time data attribute data-cookie-time
      var cookie_time = parseInt(
        $(this)
          .closest(".divi-engine-grid-list-view-switcher")
          .attr("data-cookie-time")
      );

      // toggle active class and remove from other buttons in .divi-engine-grid-list-view-switcher
      $(this).addClass("active").siblings().removeClass("active");
      // if current view is grid
      if (current_view === "grid") {
        // remove class list-view from closest grid-layout-grid_list
        $(this).closest(".grid-layout-grid_list").removeClass("de-list-view");
        // add class grid-view to body
        $(this).closest(".grid-layout-grid_list").addClass("de-grid-view");

        // if cookie_time = 0 set a session cookie
        if (cookie_time === 0) {
          document.cookie = "divi_engine_grid_list_view=grid;path=/";
        } else {
          // set cookie
          Cookies.set("divi_engine_grid_list_view", "grid", {
            expires: cookie_time,
          });
        }
      }
      // if current view is list
      if (current_view === "list") {
        // remove class grid-view from body
        $(this).closest(".grid-layout-grid_list").removeClass("de-grid-view");
        // add class list-view to body
        $(this).closest(".grid-layout-grid_list").addClass("de-list-view");

        // if cookie_time = 0 set a session cookie
        if (cookie_time === 0) {
          document.cookie = "divi_engine_grid_list_view=list;path=/";
        } else {
          // set cookie
          Cookies.set("divi_engine_grid_list_view", "list", {
            expires: cookie_time,
          });
        }
      }
    }
  );

  $(".divi-checkboxmulti .option-all").change(function () {
    if ($(this).is(":checked")) {
      $(this)
        .closest(".divi-checkboxmulti")
        .find(".et_pb_contact_field_radio input")
        .not($(this))
        .prop("checked", false);
      // get data-name attribute value
      var filter_name = $(this).attr("data-name");
      // remove all filter-param-item with data-name attribute value
      $('.filter-param-item[data-filter="' + filter_name + '"]').remove();
    }
  });

  $(
    '.divi-checkboxmulti .et_pb_contact_field_radio input[type="checkbox"]'
  ).change(function () {
    // if current element doesn't have option-all class and is checked then uncheck option-all
    if (!$(this).hasClass("option-all") && $(this).is(":checked")) {
      $(this)
        .closest(".divi-checkboxmulti")
        .find(".option-all")
        .prop("checked", false);
    }
  });

  function align_last_module() {
    $(".align-last-module").each(function () {
      var $this = $(this);
      $this.removeClass(
        "align-single_row align-multiple_rows align-speciality_rows"
      );

      if ($this.find(".slick-list").length) {
        if (
          $this.find(
            ".slick-slide:nth-child(1) .et_pb_section .et_pb_row:nth-child(2)"
          ).length > 0
        ) {
          //if looking for direct descendants then do .children('div').length
          $this.addClass("align-multiple_rows");
        } else {
          $this.addClass("align-single_row");
        }
      } else {
        // if the loop layout has multiple rows
        if (
          $this.find(".divi-filter-archive-loop .et_pb_row:nth-child(2)")
            .length > 0
        ) {
          //if looking for direct descendants then do .children('div').length
          $this.addClass("align-multiple_rows");
        }
        // else if the loop layout has et_section_specialty
        else if (
          $this.find(".divi-filter-archive-loop .et_section_specialty").length >
          0
        ) {
          // if the loop layout has et_section_specialty and multipple columns in the row
          if (
            $this.find(
              ".divi-filter-archive-loop .et_section_specialty .et_pb_column:nth-child(2)"
            ).length > 0
          ) {
            $this.addClass("align-speciality_rows");
          }
          $this.addClass("align-multiple_rows");
        } else if (
          $this.find(".bc_product_grid .et_pb_row:nth-child(2)").length > 0
        ) {
          $this.addClass("align-multiple_rows");
        } else {
          $this.addClass("align-single_row");
        }
      }
    });
  }

  function initializeSingleImageLightbox() {
    if (typeof jQuery.fn.magnificPopup === "undefined") {
      return;
    }
    jQuery(".et_pb_lightbox_image").magnificPopup({
      type: "image",
      removalDelay: 500,
      gallery: {
        enabled: false,
      },
      mainClass: "mfp-fade",
    });
  }

  align_last_module();
  initializeSingleImageLightbox();

  jQuery(document).on("divi_filter_completed", function () {
    $et_post_gallery = jQuery(".et_post_gallery");
    $et_post_gallery.each(function () {
      jQuery(this).magnificPopup({
        delegate: ".et_pb_gallery_image a",
        type: "image",
        removalDelay: 500,
        gallery: {
          enabled: true,
          navigateByImgClick: true,
        },
        mainClass: "mfp-fade",
        zoom: {
          enabled: !et_pb_custom.is_builder_plugin_used,
          duration: 500,
          opener: function (element) {
            return element.find("img");
          },
        },
      });
    });

    align_last_module();
    initializeSingleImageLightbox();
  });

  jQuery(document).on(
    "click",
    ".et_pb_checkbox_select_wrapper > label",
    function (e) {
      e.preventDefault();
      e.stopPropagation();
      jQuery(this)
        .closest(".et_pb_checkbox_select_wrapper")
        .toggleClass("checkbox_select_expanded");
    }
  );

  jQuery(".et_pb_checkbox_select_wrapper > label").click(function (e) {
    e.preventDefault();
    e.stopPropagation();
    jQuery(this)
      .closest(".et_pb_checkbox_select_wrapper")
      .toggleClass("checkbox_select_expanded");
  });

  jQuery(document).click(function () {
    jQuery(".et_pb_checkbox_select_wrapper").removeClass(
      "checkbox_select_expanded"
    );
  });

  jQuery(
    ".et_pb_checkbox_select_wrapper .et_pb_contact_field_options_list input"
  ).change(function () {
    var label_obj = jQuery(this)
      .closest(".et_pb_checkbox_select_wrapper")
      .find(" > label");
    var origin_label = label_obj.attr("origin-label");
    if (typeof origin_label === "undefined" || origin_label === "") {
      label_obj.attr("origin-label", label_obj.text());
    }

    var option_list = jQuery(this).closest(".et_pb_contact_field_options_list");

    var checked_vals = [];

    if (option_list.find("input:checked").length > 0) {
      jQuery.each(option_list.find("input:checked"), function () {
        if (jQuery(this).val() !== "") {
          checked_vals.push(
            jQuery(this).parent().find(".radio-label").attr("title")
          );
        }
      });

      if (checked_vals.length > 0) {
        label_obj.text(checked_vals.join(", "));
      } else {
        label_obj.text(label_obj.attr("origin-label"));
      }
    } else {
      label_obj.text(label_obj.attr("origin-label"));
    }
  });

  jQuery(document).on(
    "click",
    ".show_in_section > .divi-filter-loop-container > .loop-grid > .dmach-grid-item",
    function (e) {
      var $this = jQuery(e.target);
      if ($this.closest(".dm_content").length === 0) {
        e.preventDefault();
        var content_layout = jQuery(this)
          .closest(".show_in_section")
          .attr("data-content_section_layout");
        var content_selector = jQuery(this)
          .closest(".show_in_section")
          .attr("data-content_section_selector");
        var post_id = jQuery(this).attr("data-id");
        var post_type = jQuery(this).attr("data-posttype");

        var modal_layouts = [content_layout];
        var post_ids = [[post_id]];

        if (
          $this
            .closest(".show_in_section")
            .hasClass("show_in_same_row_mobile") &&
          jQuery(window).width() < 769
        ) {
          if (
            $this
              .closest(".grid-item-cont")
              .find(" > *")
              .eq(0)
              .find(".dm_content").length > 0
          ) {
            $this
              .closest(".grid-item-cont")
              .find(" > *")
              .eq(0)
              .find(".dm_content")
              .toggleClass("open");
            return false;
          }
        }

        if (content_selector !== "" && content_layout !== "") {
          jQuery.ajax({
            url: filter_ajax_object.ajax_url,
            data: {
              action: "divi_filter_get_post_modal_ajax_handler",
              security: filter_ajax_object.security,
              post_ids: JSON.stringify(post_ids),
              post_type: post_type,
              modal_layout: JSON.stringify(modal_layouts),
              modal_postype: post_type,
            },
            type: "POST",
            dataType: "JSON",
            success: function (data) {
              jQuery(content_selector).html("");
              var content =
                data["content"]["show_modal_" + content_layout + "_" + post_id];
              content = content + data.css_output;
              if (
                data["content"][
                  "show_modal_" + content_layout + "_" + post_id
                ] !== ""
              ) {
                if (
                  $this
                    .closest(".show_in_section")
                    .hasClass("show_in_same_row_mobile") &&
                  jQuery(window).width() < 769
                ) {
                  $this
                    .closest(".grid-item-cont")
                    .find(" > *")
                    .eq(0)
                    .find(".dm_content")
                    .remove();
                  $this
                    .closest(".grid-item-cont")
                    .find(" > *")
                    .eq(0)
                    .append(
                      '<div class="dm_content open">' + content + "</div>"
                    );
                } else {
                  $this
                    .closest(".show_in_section")
                    .find(".grid-item-cont")
                    .removeClass("selected");
                  $this.closest(".grid-item-cont").addClass("selected");
                  jQuery(content_selector).html(content);
                }

                jQuery(".variations_form").each(function () {
                  jQuery(this).wc_variation_form();
                  jQuery(this).trigger("check_variations");
                });

                jQuery.event.trigger({
                  type: "divi_filter_completed",
                });
              }
            },
          });
        }
      }
    }
  );

  $(".divi-swatch .et_pb_contact_field_radio .radio-label i").mousedown(
    function (e) {
      var $self = $(this);
      var closestInput = $(this)
        .closest(".et_pb_contact_field_radio")
        .find('input[type="radio"]')[0];
      if (typeof closestInput !== "undefined" && closestInput.length > 0) {
        if (closestInput.checked) {
          var uncheck = function () {
            setTimeout(function () {
              closestInput.checked = false;
              divi_find_filters_to_filter();
            }, 0);
          };
          var unbind = function () {
            $self.unbind("mouseup", up);
          };
          var up = function () {
            uncheck();
            unbind();
          };
          $self.bind("mouseup", up);
          $self.one("mouseout", unbind);
        }
      }
    }
  );

  $(".divi-swatch .et_pb_contact_field_radio .star-rating").mousedown(function (
    e
  ) {
    var $self = $(this);
    var closestInput = $(this)
      .closest(".et_pb_contact_field_radio")
      .find('input[type="radio"]')[0];
    if (closestInput.checked) {
      var uncheck = function () {
        setTimeout(function () {
          closestInput.checked = false;
          divi_find_filters_to_filter();
        }, 0);
      };
      var unbind = function () {
        $self.unbind("mouseup", up);
      };
      var up = function () {
        uncheck();
        unbind();
      };
      $self.bind("mouseup", up);
      $self.one("mouseout", unbind);
    }
  });

  if ($(".divi-filter-slide").length > 0) {
    var toggler_btn_id = $(".divi-filter-slide")
      .find("#divi_filter")
      .data("slide_toggler");
    $(".divi-filter-slide").closest(".et_pb_row").addClass("has-slide-filter");
    $(".divi-filter-slide")
      .closest(".et_pb_column")
      .addClass("slide slide-close");
    $("#" + toggler_btn_id).click(function (e) {
      e.preventDefault();
      var temp = $(this).text();
      $(this).text(
        $('#divi_filter[data-slide_toggler="' + toggler_btn_id + '"]').attr(
          "data-slide_hide_text"
        )
      );
      $('#divi_filter[data-slide_toggler="' + toggler_btn_id + '"]').attr(
        "data-slide_hide_text",
        temp
      );
      $('#divi_filter[data-slide_toggler="' + toggler_btn_id + '"]')
        .closest(".et_pb_column")
        .toggleClass("slide-close")
        .toggleClass("slide-open");
      if (typeof "same_height" === "function") {
        same_height();
      }
    });
  }

  $(".et_pb_contact_field_radio.is-collapsible").each(function (i, obj) {
    var cat_id = $(this).attr("data_cat_id");

    if (!hasCheckedChild($(this))) {
      $('.et_pb_contact_field_radio[data_parent_cat_id="' + cat_id + '"]').each(
        function (i, obj) {
          $(this).hide();
        }
      );
    }
  });

  function hasCheckedChild(obj) {
    var cat_id = obj.attr("data_cat_id");
    var has_checked =
      $('.et_pb_contact_field_radio[data_parent_cat_id="' + cat_id + '"]').find(
        ":checked"
      ).length > 0;
    if (has_checked) {
      return true;
    } else {
      var has_grandchild =
        $(
          '.et_pb_contact_field_radio.is-collapsible[data_parent_cat_id="' +
            cat_id +
            '"]'
        ).length > 0;
      if (has_grandchild) {
        $(
          '.et_pb_contact_field_radio.is-collapsible[data_parent_cat_id="' +
            cat_id +
            '"]'
        ).each(function () {
          if (hasCheckedChild($(this))) {
            has_checked = true;
            return false;
          }
        });
      }
      return has_checked;
    }
  }

  $(".deselect_radio .et_pb_contact_field_radio :radio").mousedown(function (
    e
  ) {
    var $self = $(this);

    if ($self.is(":checked")) {
      var uncheck = function () {
        setTimeout(function () {
          $self.removeAttr("checked");
          divi_find_filters_to_filter();
        }, 0);
      };
      var unbind = function () {
        $self.unbind("mouseup", up);
      };
      var up = function () {
        uncheck();
        unbind();
      };
      $self.bind("mouseup", up);
      $self.one("mouseout", unbind);
    }
  });

  /*$(document).on('click', ".et_pb_contact_field_radio.is-collapsible input", function (event) {
      $(this).closest(".et_pb_contact_field_radio").toggleClass("open");
      var preventdefault = $(this).closest(".et_pb_contact_field_radio").attr('data_prevent_collapse');
      if (preventdefault == 'on') {
        event.preventDefault();
      }
      var cat_id = $(this).closest(".et_pb_contact_field_radio").attr('data_cat_id');
      $('.et_pb_contact_field_radio[data_parent_cat_id="' + cat_id + '"]').each(function (i, obj) {
        $(this).toggle("slow");
      });
  });*/

  function filter_collapsible_click(evt, func_type) {
    //evt.preventDefault();
    //evt.stopPropagation();

    var $this = $(evt.target);

    var preventdefault;
    if ($this.hasClass("et_pb_contact_field_radio")) {
      $this.toggleClass("open");
      preventdefault = $this.attr("data_prevent_collapse");
    } else {
      $this.closest(".et_pb_contact_field_radio").toggleClass("open");
      preventdefault = $this
        .closest(".et_pb_contact_field_radio")
        .attr("data_prevent_collapse");
    }

    if ($this.is("label") && preventdefault !== "on") {
      return false;
    }

    var $collapseItem = $this.hasClass("et_pb_contact_field_radio")
      ? $this
      : $this.closest(".et_pb_contact_field_radio");

    if (func_type === "A" && $collapseItem.attr("data-func_b") === "active") {
      $collapseItem.removeAttr("data-func_a");
      $collapseItem.removeAttr("data-func_b");
      return false;
    }

    if (func_type === "B" && $collapseItem.attr("data-func_a") === "active") {
      $collapseItem.removeAttr("data-func_a");
      $collapseItem.removeAttr("data-func_b");
      return false;
    }

    if (preventdefault === "on") {
      evt.preventDefault();
      evt.stopPropagation();
    }
    var cat_id = $this.hasClass("et_pb_contact_field_radio")
      ? $this.attr("data_cat_id")
      : $this.closest(".et_pb_contact_field_radio").attr("data_cat_id");
    $('.et_pb_contact_field_radio[data_parent_cat_id="' + cat_id + '"]').each(
      function (i, obj) {
        if ($(this).hasClass("open")) {
          $(this).trigger("click");
        }
        $(this).toggle("slow");
      }
    );
  }

  $(document).on(
    "click",
    ".et_pb_contact_field_radio.is-collapsible",
    function (event) {
      var $this = $(event.target);

      if (
        !$this.is("label") ||
        ($this.is("label") &&
          $this
            .closest(".et_pb_contact_field_radio")
            .attr("data_prevent_collapse") === "on")
      ) {
        $(this).attr("data-func_a", "active");
        filter_collapsible_click(event, "A");
      }
    }
  );

  $(".et_pb_contact_field_radio.is-collapsible").click(function (event) {
    var $this = $(event.target);

    if (
      !$this.is("label") ||
      ($this.is("label") &&
        $this
          .closest(".et_pb_contact_field_radio")
          .attr("data_prevent_collapse") === "on")
    ) {
      $(this).attr("data-func_b", "active");
      filter_collapsible_click(event, "B");
    }
  });

  $(document).on("click", ".showmore", function (event) {
    event.preventDefault();
    event.stopPropagation();
    $(this)
      .closest(".et_pb_de_mach_search_posts_item")
      .addClass("limit_show_all");
  });

  $(".showmore").click(function (event) {
    event.preventDefault();
    event.stopPropagation();
    $(this)
      .closest(".et_pb_de_mach_search_posts_item")
      .addClass("limit_show_all");
  });

  $(document).on("click", ".showless", function (event) {
    event.preventDefault();
    event.stopPropagation();
    $(this)
      .closest(".et_pb_de_mach_search_posts_item")
      .removeClass("limit_show_all");
  });

  $(".showless").click(function (event) {
    event.preventDefault();
    event.stopPropagation();
    $(this)
      .closest(".et_pb_de_mach_search_posts_item")
      .removeClass("limit_show_all");
  });

  $(document).on(
    "click",
    ".mobile_toggle_trigger.et_pb_button",
    function (event) {
      var toggle_text = $(this).attr("data-toggle_text");
      $(this).attr("data-toggle_text", $(this).text());
      $(this).text(toggle_text);
      $("body").toggleClass("mobile-filter-open");
      $(this).parent().find(".divi_filter_module").slideToggle();
    }
  );

  if ($("#divi_filter").length > 0) {
    $("#divi_filter")
      .find(".mobile_toggle_trigger.sticky-toggle")
      .click(function () {
        $(this).closest("#divi_filter").toggleClass("toggle_open");
        $("body").toggleClass("mobile-filter-open");
      });
  }

  $(document).on(
    "change",
    "#divi_filter select, #divi_filter input[type=radio], #divi_filter input[type=checkbox], #divi_filter input[type=range], #dmach-search-form select, #dmach-search-form input[type=radio], #dmach-search-form input[type=checkbox], #dmach-search-form input[type=range]",
    function () {
      if ($(this).closest(".search_filter_cont").hasClass("condition-field")) {
        handle_conditional_fields($(this));
      }
    }
  );

  $(document.body).on("click", ".bc-link-whole-grid-card", function (t) {
    var $target = $(t.target);
    $newtab = $target.closest(".et_pb_de_mach_archive_loop");

    if (
      !$target.hasClass("ajax_add_to_cart") &&
      !$target.is("button") &&
      !$target.is("input") &&
      !$target.is("select") &&
      !$target.is("textarea")
    ) {
      var url = $(this).data("link-url");
      if ($newtab.hasClass("link_whole_new_tab")) {
        window.open(url, "_blank");
      } else {
        window.location.href = url;
      }
    }
  });

  if ($(".mobile_toggle_trigger").length > 0) {
    $(".mobile_toggle_trigger").closest(".et_pb_column").css("z-index", "20");
  }

  $(
    ".divi-filer-toggle .et_pb_contact_field_options_title, .divi-filer-toggle-mob .et_pb_contact_field_options_title"
  ).click(function (e) {
    if (
      $(this).closest(".et_pb_de_mach_search_posts_item").hasClass("visible")
    ) {
      $(".et_pb_de_mach_search_posts_item").removeClass("visible");
    } else {
      $(".et_pb_de_mach_search_posts_item").removeClass("visible");
      $(this).closest(".et_pb_de_mach_search_posts_item").addClass("visible");
    }
  });

  $(".post_obj_sub_cat_name").click(function (e) {
    e.preventDefault();
    $(this).closest(".post_obj_sub_cat").toggleClass("expand");
  });

  show_filter_counts();

  show_hide_reset();

  handle_conditional_fields();

  $(".reset-filters").click(function (event) {
    event.preventDefault();

    reset_filter_clicked = true;

    var current_loop_taxonomy = $(".divi-filter-archive-loop.main-loop").data(
      "current-taxonomy"
    );
    var current_loop_taxterm = $(".divi-filter-archive-loop.main-loop").data(
      "current-taxterm"
    );

    if ($(this).closest("#divi_filter").find(".js-range-slider").length) {
      $(this)
        .closest("#divi_filter")
        .find(".js-range-slider")
        .each(function (i, obj) {
          var $slider = $(this);
          var slider_instance = $slider.data("ionRangeSlider");
          if (typeof slider_instance !== "undefined") {
            slider_instance.options.to = slider_instance.options.max;
            slider_instance.options.from = slider_instance.options.min;
            slider_instance.reset();
          }
        });
    }

    $(".et_pb_contact_field_radio").removeClass("hidethis");
    $(this).closest("#divi_filter").find("input[type=text], textarea").val("");
    $(this)
      .closest("#divi_filter")
      .find("input.js-datepicker")
      .attr("data-start_date", "");
    $(this)
      .closest("#divi_filter")
      .find("input.js-datepicker")
      .attr("data-end_date", "");
    $(this)
      .closest("#divi_filter")
      .find(".et_pb_contact_select")
      .prop("selectedIndex", 0);
    $(this).closest("#divi_filter").find(".et_pb_contact_select").val("");
    $(this)
      .closest("#divi_filter")
      .find(".et_pb_contact_select")
      .find("option:eq(0)")
      .prop("selected", "selected");
    $(this)
      .closest("#divi_filter")
      .find(".et_pb_checkbox_select_wrapper")
      .each(function () {
        var label_obj = $(this).find(" > label");
        var origin_label = label_obj.attr("origin-label");
        if (typeof origin_label !== "undefined" && origin_label !== "") {
          label_obj.text(origin_label);
        }
      });

    if (
      $(this)
        .closest("#divi_filter")
        .find(".et_pb_contact_select.divi-acf-map-radius").length > 0
    ) {
      var map_radius_default = $(this)
        .closest("#divi_filter")
        .find(".et_pb_contact_select.divi-acf-map-radius")
        .attr("data-default-value");
      if (map_radius_default !== "") {
        $(this)
          .closest("#divi_filter")
          .find(".et_pb_contact_select.divi-acf-map-radius")
          .val(map_radius_default);
        $(this)
          .closest("#divi_filter")
          .find(".et_pb_contact_select.divi-acf-map-radius")
          .find("option[value='" + map_radius_default + "']")
          .prop("selected", "selected");
      }
    }
    $(this)
      .closest("#divi_filter")
      .find(".et_pb_contact_field_radio input")
      .prop("checked", false);
    $(this)
      .closest("#divi_filter")
      .find('.et_pb_contact_field_radio input[value=""]')
      .prop("checked", true);

    if (
      $(this).closest("#divi_filter").find(".select2-hidden-accessible")
        .length > 0
    ) {
      $(this)
        .closest("#divi_filter")
        .find(".select2-hidden-accessible")
        .select2();
    }

    $(this)
      .closest("#divi_filter")
      .find(".et_pb_contact_field_options_wrapper")
      .each(function (i, obj) {
        var current_tax_exist = false;
        if (
          typeof current_loop_taxonomy !== "undefined" &&
          typeof current_loop_taxterm !== "undefined"
        ) {
          if (
            $(this).find("input").eq(0).data("name") === current_loop_taxonomy
          ) {
            if (
              $(this).find('input[value="' + current_loop_taxterm + '"]')
                .length > 0
            ) {
              //$(this).find('input[value="' + current_loop_taxterm + '"]').prop('checked', true);
              current_tax_exist = true;
            }
          }
        }
        if (
          $(this).find('label[data-value="all"]').length > 0 &&
          current_tax_exist === false
        ) {
          $(this)
            .find('label[data-value="all"]')
            .closest(".et_pb_contact_field_radio")
            .find("input")
            .prop("checked", true);
        }
      });

    if (
      typeof current_loop_taxonomy !== "undefined" &&
      typeof current_loop_taxterm !== "undefined"
    ) {
      if (
        $(this)
          .closest("#divi_filter")
          .find(
            '.et_pb_contact_select[data-name="' + current_loop_taxonomy + '"]'
          ).length > 0
      ) {
        if (
          $(this)
            .closest("#divi_filter")
            .find(
              '.et_pb_contact_select[data-name="' + current_loop_taxonomy + '"]'
            )
            .find('option[value="' + current_loop_taxterm + '"]').length > 0
        ) {
          //$(this).closest('#divi_filter').find('.et_pb_contact_select[data-name="' + current_loop_taxonomy + '"]').val(current_loop_taxterm);
        }
      }
    }

    $(this)
      .closest("#divi_filter")
      .find("[data-name]")
      .each(function () {
        set_sync_field($(this));
      });

    $(".filter-param-item").remove();

    var oldURL = document.location.href;
    var index = 0;
    var newURL = oldURL;
    index = oldURL.indexOf("?");
    if (index === -1) {
      index = oldURL.indexOf("");
    }
    if (index !== -1) {
      newURL = oldURL.substring(0, index);
    }
    window.history.replaceState(null, null, newURL);

    handle_conditional_fields();

    jQuery(".search_filter_cont[data-conditional-logic]")
      .closest(".et_pb_de_mach_search_posts_item")
      .hide();

    divi_find_filters_to_filter();
  });

  if (
    jQuery(".divi-filter-archive-loop.main-loop").length > 0 &&
    "1" === filter_ajax_object.ajax_pagination
  ) {
    jQuery(".woocommerce-ordering").submit(function () {
      return false;
    });
  }

  if (jQuery(".orderby").length > 0) {
    var sortorder = jQuery(".orderby").val();
    var sortasc = "desc";

    jQuery(".orderby")
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-orderbyvalue", jQuery(".orderby").val());

    if (typeof post_var !== "undefined") {
      var dataObj = JSON.parse(post_var);
      sortorder = dataObj.orderby;
      sortasc = dataObj.order;
      jQuery(".orderby")
        .closest(".et_pb_module")
        .find(".divi-filter-archive-loop.main-loop")
        .attr("data-orderbyvalue", sortorder);
    }

    if (sortorder === "price") {
      sortasc = "asc";
    }

    var split_sort = sortorder.split("-");

    if (Array.isArray(split_sort) && split_sort.length > 1) {
      sortorder = split_sort[0];
      sortasc = split_sort[1];
    }

    /*jQuery('.orderby').closest('.et_pb_module').find('.divi-filter-archive-loop.main-loop').attr("data-sortorder", sortorder);
    jQuery('.orderby').closest('.et_pb_module').find('.divi-filter-archive-loop.main-loop').attr("data-sortasc", sortasc);*/
  }
});

jQuery(document).on("click", "a.page-numbers", function (e) {
  if (
    jQuery(".divi-filter-archive-loop.main-loop").length > 0 &&
    "1" === filter_ajax_object.ajax_pagination
  ) {
    e.preventDefault();
    e.stopPropagation();

    page_clicked = true;

    var current_page = parseInt(
      jQuery(this).closest("ul").find(".current").text().replace(/,/g, "")
    );
    var new_page = current_page;
    if (jQuery(this).hasClass("next")) {
      new_page = current_page + 1;
    } else if (jQuery(this).hasClass("prev")) {
      new_page = current_page - 1;
    } else {
      new_page = parseInt(jQuery(this).text());
    }

    divi_append_url("page", new_page);

    if (
      jQuery(this)
        .closest(".et_pb_module")
        .find(".divi-filter-archive-loop.main-loop").length > 0
    ) {
      jQuery(this)
        .closest(".et_pb_module")
        .find(".divi-filter-archive-loop.main-loop")
        .attr("data-current-page", new_page);
      jQuery(this)
        .closest(".et_pb_module")
        .find(".divi-filter-archive-loop.main-loop")
        .attr("data-pagechanged", "true");
    } else if (
      jQuery(this).closest(".et_pb_module").hasClass("et_pb_db_shop_after")
    ) {
      jQuery(".divi-filter-archive-loop.main-loop").attr(
        "data-current-page",
        new_page
      );
      jQuery(".divi-filter-archive-loop.main-loop").attr(
        "data-pagechanged",
        "true"
      );
    }

    divi_find_filters_to_filter();
  } else {
    if (jQuery(".divi-filter-archive-loop.main-loop").length > 0) {
      e.preventDefault();
      e.stopPropagation();
      var current_page = parseInt(
        jQuery(this).closest("ul").find(".current").text().replace(/,/g, "")
      );
      var new_page = current_page;
      if (jQuery(this).hasClass("next")) {
        new_page = current_page + 1;
      } else if (jQuery(this).hasClass("prev")) {
        new_page = current_page - 1;
      } else {
        new_page = parseInt(jQuery(this).text());
      }

      divi_append_url("page", new_page);
      window.location.reload();
    }
  }
});

/*jQuery(document).ready(function () {
  setTimeout(function () {
    if (jQuery('.divi-filter-archive-loop.main-loop').length > 0 && "1" != filter_ajax_object.ajax_pagination) {

      var pagi_scrollto = jQuery('.divi-filter-archive-loop.main-loop').attr('data-pagi_scrollto');
      var pagi_scrollto_fine = jQuery('.divi-filter-archive-loop.main-loop').attr('data-pagi_scrollto_fine');
      var loadmore_scrollto = jQuery('.divi-filter-archive-loop.main-loop').attr('data-loadmore');


      if (pagi_scrollto == 'on') {
        $scrolltosection = jQuery('.divi-filter-archive-loop.main-loop'),
          scrollto_fine_tune = pagi_scrollto_fine.replace('px', '');

        if (scrollto_fine_tune.match("^-")) {
          scrollto_fine_tune = scrollto_fine_tune.replace('-', '');
          scrollto_fine_tune_dis = parseInt(scrollto_fine_tune);
          jQuery('html, body').animate({
            scrollTop: $scrolltosection.offset().top - scrollto_fine_tune_dis
          }, 500);
        } else {
          scrollto_fine_tune_dis = parseInt(scrollto_fine_tune);
          jQuery('html, body').animate({
            scrollTop: $scrolltosection.offset().top + scrollto_fine_tune_dis
          }, 500);
        }
      }
    }
  }, 1000)
});*/

jQuery(document).on("change", ".orderby", function (e) {
  if (
    jQuery(".divi-filter-archive-loop.main-loop").length > 0 &&
    "1" === filter_ajax_object.ajax_pagination
  ) {
    e.preventDefault();
    e.stopPropagation();

    var sortorder = jQuery(this).val();
    var sortasc = "desc";

    if (sortorder === "price") {
      sortasc = "asc";
    }

    var split_sort = sortorder.split("-");

    if (Array.isArray(split_sort) && split_sort.length > 1) {
      sortorder = split_sort[0];
      sortasc = split_sort[1];
    }

    order_changed = true;
    divi_append_url("orderby", jQuery(this).val());

    var loadmore = jQuery(this)
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-loadmore");

    jQuery(this)
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-sortorder", sortorder);
    jQuery(this)
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-sortasc", sortasc);
    jQuery(this)
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-orderbyvalue", jQuery(this).val());
    jQuery(this)
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-pagechanged", "true");
    jQuery(this)
      .closest(".et_pb_module")
      .find(".divi-filter-archive-loop.main-loop")
      .attr("data-sortchanged", "true");

    if (loadmore !== "pagination") {
      jQuery(this)
        .closest(".et_pb_module")
        .find(".divi-filter-archive-loop.main-loop")
        .attr("data-current-page", "1");
    }

    divi_find_filters_to_filter();
  } else {
    jQuery(this).closest("form").submit();
  }
});

jQuery(".radio-label").click(function () {
  var radiobutton_val = jQuery(this).attr("data-value"),
    parent = jQuery(this).closest(".et_pb_contact_field_options_list");
  parent.find('input[type="radio"]').prop("checked", false);
  //parent.find('input[value="' + radiobutton_val + '"]').trigger("click");
});

function set_sync_field(obj) {
  var filter_name = obj.attr("data-name");
  if (obj.is("select") || obj.is('input[type="radio"]')) {
    var selected_val = "";
    if (obj.is("select")) {
      selected_val = obj.val();
    } else {
      selected_val = obj
        .closest(".et_pb_contact_field_options_list")
        .find('input[type="radio"]:checked')
        .val();
    }

    if (selected_val !== "") {
      // Get all fields with same name
      var sync_radio_check_fields = jQuery(
        ".et_pb_contact_field_options_list"
      ).find('input[data-name="' + filter_name + '"]');
      sync_radio_check_fields.each(function () {
        if (jQuery(this).val() === selected_val) {
          jQuery(this).prop("checked", true);
        } else {
          jQuery(this).prop("checked", false);
        }
      });

      var sync_select_fields = jQuery(".search_filter_cont").find(
        'select[data-name="' + filter_name + '"]'
      );
      sync_select_fields.each(function () {
        jQuery(this).val(selected_val);
        jQuery(this)
          .find('option[value="' + selected_val + '"]')
          .prop("selected", true);
      });
    }
  } else if (obj.is('input[type="checkbox"]')) {
    var selected_options = obj
      .closest(".et_pb_contact_field_options_list")
      .find('input[type="checkbox"]:checked');
    if (selected_options.length > 0) {
      var selected_val = [];
      selected_options.each(function () {
        selected_val.push(jQuery(this).val());
      });

      // Get all fields with same name
      var sync_checkbox_fields = jQuery(
        ".et_pb_contact_field_options_list"
      ).find('input[data-name="' + filter_name + '"]');
      sync_checkbox_fields.each(function () {
        if (selected_val.indexOf(jQuery(this).val()) > -1) {
          jQuery(this).prop("checked", true);
        } else {
          jQuery(this).prop("checked", false);
        }
      });

      var sync_select_fields = jQuery(".search_filter_cont").find(
        'select[data-name="' + filter_name + '"]'
      );
      sync_select_fields.each(function () {
        jQuery(this).val(selected_val);
        jQuery(this)
          .find('option[value="' + selected_val + '"]')
          .prop("selected", true);
      });
    }
  }
}

function divi_append_url(filter_item_name, filter_item_val) {
  var url = document.location.href;

  //filter_item_val = encodeURIComponent(filter_item_val);
  if (window.location.href.indexOf("?") === -1) {
    // if no parameters set
    if (filter_item_val !== "") {
      window.history.replaceState(
        null,
        null,
        url + "?filter=true&" + filter_item_name + "=" + filter_item_val
      );
    }
  } else {
    if (window.location.search.indexOf("?filter") === -1) {
      newurl = url.replace("?", "?filter=true&");
      url = newurl;
      window.history.replaceState(null, null, newurl);
    }
    // set paramater
    if (window.location.search.indexOf("&" + filter_item_name + "=") > -1) {
      // if already set

      var stringToGoIntoTheRegex = filter_item_name;
      var regex = new RegExp(
        "([?&]" + stringToGoIntoTheRegex + ")=([^#&]*)",
        "g"
      );

      var newurl = "";

      if (filter_item_val !== "") {
        newurl = url.replace(regex, "$1=" + filter_item_val);
        window.history.replaceState(null, null, newurl);
      } else {
        newurl = url.replace(regex, "");
        window.history.replaceState(null, null, newurl);
      }
    } else {
      if (filter_item_val !== "") {
        window.history.replaceState(
          null,
          null,
          url + "&" + filter_item_name + "=" + filter_item_val
        );
      }
    }
  }
}

function divi_filter_params(
  type,
  slug,
  value,
  name,
  filter_param_type,
  iris_to,
  irs_from
) {
  if (typeof value !== "undefined" && typeof value !== "object") {
    var addTag = false;
    jQuery('.divi-filter-item[data-filter-option="' + slug + '"]').each(
      function () {
        if (
          jQuery(this)
            .closest(".search_filter_cont")
            .find(".et_pb_contact_field_options_title")
            .text() === name
        ) {
          if (jQuery(this).find(".divi-acf").eq(0).is("select")) {
            if (
              jQuery(this).find(".divi-acf option:selected").text().trim() ===
                value ||
              (jQuery(this).find(".divi-acf option:selected").val() === "" &&
                value === "")
            ) {
              jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .find("option")
                .each(function () {
                  if (!jQuery(this).is(":selected")) {
                    jQuery(
                      ".param-" +
                        slug +
                        '[data-value="' +
                        jQuery(this).text().trim() +
                        '"]'
                    ).remove();
                  } else {
                    addTag = true;
                  }
                });
              /* if (jQuery('.param-' + slug + '[data-value="' + value.replace(/\"/g, '\\"') + '"]').length == 0) {
              addTag = true;
            } */
            }
          } else {
            if (jQuery(this).hasClass("divi-checkboxmulti")) {
              if (
                jQuery(this).find(
                  '.radio-label[title="' + value.replace(/\"/g, '\\"') + '"]'
                ).length > 0
              ) {
                if (
                  jQuery(
                    ".param-" +
                      slug +
                      '[data-value="' +
                      value.replace(/\"/g, '\\"') +
                      '"]'
                  ).length
                ) {
                  jQuery(
                    ".param-" +
                      slug +
                      '[data-value="' +
                      value.replace(/\"/g, '\\"') +
                      '"]'
                  ).remove();
                }
                if (
                  jQuery(this)
                    .find(
                      '.radio-label[title="' +
                        value.replace(/\"/g, '\\"') +
                        '"]'
                    )
                    .closest(".et_pb_contact_field_radio")
                    .find("input")
                    .eq(0)
                    .is(":checked")
                ) {
                  addTag = true;
                }
              }
            } else {
              if (
                jQuery(this).find(
                  '.radio-label[title="' + value.replace(/\"/g, '\\"') + '"]'
                ).length > 0
              ) {
                jQuery(this)
                  .find(".divi-acf")
                  .each(function () {
                    if (!jQuery(this).is(":selected")) {
                      jQuery(
                        ".param-" +
                          slug +
                          '[data-value="' +
                          jQuery(this)
                            .parent()
                            .find(".radio-label")
                            .attr("title")
                            .trim() +
                          '"]'
                      ).remove();
                    }
                  });
              }

              /* if (jQuery('.param-' + slug + '[data-value="' + value.replace(/\"/g, '\\"') + '"]').length == 0) {
              addTag = true;
            } */
              if (
                jQuery(this)
                  .find(
                    '.radio-label[title="' + value.replace(/\"/g, '\\"') + '"]'
                  )
                  .closest(".et_pb_contact_field_radio")
                  .find("input")
                  .eq(0)
                  .is(":checked")
              ) {
                addTag = true;
              }
            }
          }
        }
      }
    );

    if (addTag === true && value !== "") {
      if (value !== "All") {
        if (type === "range") {
          jQuery(".param-" + slug).remove();
          value = irs_from + " - " + iris_to;
        }

        if (filter_param_type === "title") {
          var tag =
            '<p class="filter-param-item param-' +
            slug +
            '" data-filter="' +
            slug +
            '" data-type="' +
            type +
            '" data-value="' +
            value.replace(/\"/g, '\\"') +
            '">' +
            name +
            ": " +
            value +
            '<span class="remove-filter"></span></p>';
        } else {
          var tag =
            '<p class="filter-param-item param-' +
            slug +
            '" data-filter="' +
            slug +
            '" data-type="' +
            type +
            '" data-value="' +
            value.replace(/\"/g, '\\"') +
            '">' +
            value +
            '<span class="remove-filter"></span></p>';
        }

        if (jQuery(".main-loop .filter-param-tags").length > 0) {
          jQuery(".main-loop .filter-param-tags").eq(0).append(tag);
        } else {
          jQuery(".main-loop")
            .closest(".et_pb_module")
            .find(".filter-param-tags")
            .eq(0)
            .append(tag);
        }
      }
    }
  }
}

/*function divi_filter_params_array(type_arr, slug_arr, value_arr, name_arr, filter_param_type_arr, iris_to_arr, irs_from_arr) {

  var len = type_arr.length;
  var data = []
  for (var x = 0; x < len; x++) {
    var element = {
      "type_arr": type_arr[x],
      "slug_arr": slug_arr[x],
      "value_arr": value_arr[x],
      "name_arr": name_arr[x],
      "filter_param_type_arr": filter_param_type_arr[x],
      "iris_to_arr": iris_to_arr[x],
      "irs_from_arr": irs_from_arr[x]
    };
    data.push(element);
  }

}*/

function divi_filter_params_array(
  type_arr,
  slug_arr,
  value_arr,
  name_arr,
  filter_param_type_arr,
  iris_to_arr,
  irs_from_arr
) {
  var len = type_arr.length;
  var data = [];
  for (var x = 0; x < len; x++) {
    var element = {
      type_arr: type_arr[x],
      slug_arr: slug_arr[x],
      value_arr: value_arr[x],
      name_arr: name_arr[x],
      filter_param_type_arr: filter_param_type_arr[x],
      iris_to_arr: iris_to_arr[x],
      irs_from_arr: irs_from_arr[x],
    };
    data.push(element);
  }

  jQuery.each(data, function (i, item) {
    var type = item.type_arr,
      slug = item.slug_arr,
      value = item.value_arr,
      name = item.name_arr,
      filter_param_type = item.filter_param_type_arr,
      iris_to = item.iris_to_arr,
      irs_from = item.irs_from_arr;

    divi_filter_params(
      type,
      slug,
      value,
      name,
      filter_param_type,
      iris_to,
      irs_from
    );
  });
}

jQuery(document).on("click", ".remove-filter", function () {
  var filter = jQuery(this).closest(".filter-param-item").attr("data-filter"),
    type = jQuery(this).closest(".filter-param-item").attr("data-type"),
    value = jQuery(this).closest(".filter-param-item").attr("data-value"),
    current_taxonomy = jQuery(".divi-filter-archive-loop.main-loop").attr(
      "data-current-taxonomy"
    ),
    current_taxonomy_term = jQuery(".divi-filter-archive-loop.main-loop").attr(
      "data-current-taxterm"
    );

  var _clicked = jQuery(this);

  jQuery('.divi-filter-item[data-filter-option="' + filter + '"]').each(
    function () {
      var filter_found = false;

      if (type === "radio" || type === "checkbox") {
        if (
          jQuery(this).find(
            '.radio-label[title="' + value.replace(/\"/g, '\\"') + '"]'
          ).length > 0
        ) {
          if (jQuery(this).hasClass("divi-checkboxmulti")) {
            jQuery(this)
              .find('.radio-label[title="' + value.replace(/\"/g, '\\"') + '"]')
              .parent()
              .find("input")
              .prop("checked", false)
              .trigger("change");
            if (
              jQuery(this).find(
                '.et_pb_contact_field_radio input[data-name="' +
                  filter +
                  '"]:checked'
              ).length === 0
            ) {
              jQuery(this)
                .find(
                  '.et_pb_contact_field_radio input[data-name="' +
                    filter +
                    '"][value=""]'
                )
                .prop("checked", true);
            }
          } else {
            jQuery(this)
              .find(
                '.et_pb_contact_field_radio input[data-name="' + filter + '"]'
              )
              .prop("checked", false)
              .trigger("change");
            jQuery(this)
              .find(
                '.et_pb_contact_field_radio input[data-name="' +
                  filter +
                  '"][value=""]'
              )
              .prop("checked", true)
              .trigger("change");
            jQuery(".param-" + filter).remove();
          }

          if (
            filter === current_taxonomy &&
            current_taxonomy_term ===
              jQuery(this)
                .find(
                  '.radio-label[title="' + value.replace(/\"/g, '\\"') + '"]'
                )
                .attr("data-value")
          ) {
            jQuery(".divi-filter-archive-loop.main-loop").attr(
              "data-current-taxterm",
              ""
            );
          }
        }
      } else if (type === "range") {
        var $slider = jQuery('.js-range-slider[data-name="' + filter + '"]');
        var slider_instance = $slider.data("ionRangeSlider");
        slider_instance.options.from = slider_instance.options.min;
        slider_instance.options.to = slider_instance.options.max;
        slider_instance.reset();
        filter_found = true;
      } else if (type === "select") {
        if (jQuery(this).find("option:selected").text() === value) {
          if (
            filter === current_taxonomy &&
            current_taxonomy_term === jQuery(this).val()
          ) {
            jQuery(".divi-filter-archive-loop.main-loop").attr(
              "data-current-taxterm",
              ""
            );
          }
          filter_found = true;
          jQuery('.et_pb_contact_select[data-name="' + filter + '"]').prop(
            "selectedIndex",
            0
          );
        }
      } else if (type === "text") {
        var $text = jQuery('input[data-name="' + filter + '"]');
        $text.val("");
        filter_found = true;
        jQuery("param-s").remove();
      }

      if (filter_found === true) {
        _clicked.closest(".filter-param-item").remove();
        divi_find_filters_to_filter();
      }
    }
  );
});

function divi_find_filters_to_filter() {
  var filter_item_name_arr = [];
  var filter_item_id_arr = [];
  var filter_item_val_arr = [];
  var filter_input_type_arr = [];
  var filter_value_exist = false;

  var current_url = document.location.href;

  var filter_posts_count = jQuery(".et_pb_de_mach_filter_posts").length;
  jQuery(".et_pb_de_mach_filter_posts").each(function () {
    if (
      filter_posts_count === 1 ||
      (filter_posts_count > 1 && jQuery(this).width() > 0)
    ) {
      jQuery(this)
        .find(".search_filter_cont")
        .each(function () {
          /*if (jQuery(this).closest('.et_pb_de_mach_search_posts_item').css('display') == 'none' || jQuery(this).closest('.et_pb_de_mach_search_posts_item').css('opacity') != 1) {
          return true;
        }*/
          var filter_condition = jQuery(this).data("filter-condition");
          var filter_checked = false;
          var filter_input_type = jQuery(this)
            .find(".et_pb_contact_field")
            .data("type");
          if (
            jQuery(this).find(".divi-acf").eq(0).data("filtertype") ===
            "divi-checkboxsingle"
          ) {
            if (!jQuery(this).find(".divi-acf").eq(0).is("select")) {
              var checked = jQuery(this).find("input:checked");

              if (checked.length > 0) {
                var filter_item_name = checked.data("name"),
                  filter_item_id = checked.attr("id"),
                  filter_item_val = checked.val(),
                  filter_checked =
                    filter_item_val !== "" && filter_item_val !== null
                      ? true
                      : false;
                if (filter_item_val === null) filter_item_val = "";
              } else {
                var filter_item_name = jQuery(this)
                    .find("input")
                    .eq(0)
                    .data("name"),
                  filter_item_id = "",
                  filter_item_val = "",
                  filter_checked = false;
              }
            } else {
              var filter_item_name = jQuery(this)
                  .find(".divi-acf")
                  .eq(0)
                  .data("name"),
                filter_item_id = jQuery(this)
                  .find(".divi-acf")
                  .eq(0)
                  .attr("id"),
                filter_item_val = jQuery(this).find(".divi-acf").eq(0).val(),
                filter_checked =
                  filter_item_val !== "" && filter_item_val !== null
                    ? true
                    : false;
              if (filter_item_val === null) filter_item_val = "";
            }
          } else if (
            jQuery(this).find(".divi-acf").eq(0).data("filtertype") ===
            "divi-checkboxmulti"
          ) {
            var checked = jQuery(this).find("input:checked");
            var checked_arr = [];
            checked.each(function () {
              if (jQuery(this).val() !== "") {
                checked_arr.push(jQuery(this).val());
              }
            });

            var filter_item_name = jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .data("name"),
              filter_item_id = jQuery(this).find(".divi-acf").eq(0).attr("id"),
              filter_item_val =
                filter_condition === "and"
                  ? checked_arr.join("|")
                  : checked_arr.join(","),
              filter_checked =
                filter_item_val !== "" && filter_item_val !== null
                  ? true
                  : false;
            if (filter_item_val === null) filter_item_val = "";
          } else if (
            jQuery(this).find(".divi-acf").eq(0).data("filtertype") ===
            "address"
          ) {
            var filter_item_name = jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .data("name"),
              filter_item_id = jQuery(this).find(".divi-acf").eq(0).attr("id"),
              filter_item_val = jQuery(this).find(".divi-acf").eq(0).val(),
              filter_checked =
                filter_item_val !== "" && filter_item_val !== null
                  ? true
                  : false;
            if (filter_item_val === null) filter_item_val = "";
            if (filter_checked) {
              map_radius = jQuery(this).find(".divi-acf-map-radius").val();
              divi_append_url("map_radius", map_radius);
              map_radius_unit = jQuery(this)
                .find(".divi-acf-map-radius")
                .data("radius-type");
              divi_append_url("map_radius_unit", map_radius_unit);
            }
          } else if (
            jQuery(this).find(".divi-acf").eq(0).data("filtertype") ===
            "datepicker"
          ) {
            var filter_item_name = jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .data("name"),
              filter_item_id = jQuery(this).find(".divi-acf").eq(0).attr("id"),
              start_date = jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .attr("data-start_date"),
              end_date = jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .attr("data-end_date"),
              filter_item_val = "",
              filter_checked = false;

            if (start_date !== "" && end_date !== "") {
              if (start_date !== end_date) {
                filter_item_val = start_date + ";" + end_date;
              } else {
                filter_item_val = start_date;
              }
            }

            if (typeof filter_item_val === "undefined") {
              filter_item_val = "";
            }

            if (filter_item_val !== "") {
              filter_checked = true;
            }

            if (filter_checked) {
              divi_append_url(filter_item_name, filter_item_val);
            }
          } else {
            var filter_item_name = jQuery(this)
                .find(".divi-acf")
                .eq(0)
                .data("name"),
              filter_item_id = jQuery(this).find(".divi-acf").eq(0).attr("id"),
              filter_item_val = jQuery(this).find(".divi-acf").eq(0).val(),
              filter_checked =
                filter_item_val !== null && filter_item_val !== ""
                  ? true
                  : false;

            if (filter_item_val === null) filter_item_val = "";

            if (
              jQuery(this).find(".divi-acf").eq(0).attr("data-filtertype") ===
              "rangeslider"
            ) {
              var $slider = jQuery(this).find(".divi-acf").eq(0);
              var slider_instance = $slider.data("ionRangeSlider");
              if (typeof slider_instance !== "undefined") {
                var range_val_array = filter_item_val.split(";");
                if (range_val_array.length > 1) {
                  if (
                    typeof jQuery(this)
                      .find(".divi-acf")
                      .attr("data-current_max") !== "undefined" &&
                    parseFloat(range_val_array[1]) ===
                      parseFloat(
                        jQuery(this).find(".divi-acf").attr("data-current_max")
                      )
                  ) {
                    range_val_array[1] = jQuery(this)
                      .find(".divi-acf")
                      .attr("data-origin_max");
                  }
                  if (
                    parseFloat(range_val_array[1]) ===
                      parseFloat(slider_instance.options.max) &&
                    parseFloat(range_val_array[0]) ===
                      parseFloat(slider_instance.options.min)
                  ) {
                    filter_item_val = "";
                    filter_checked = false;
                  } else {
                    filter_item_val = range_val_array.join(";");
                  }
                }
              }

              if (reset_filter_clicked === true) {
                filter_item_val = "";
                filter_checked = false;
              }
            }
          }

          if (
            !is_filtering &&
            (jQuery(this)
              .closest(".et_pb_de_mach_search_posts_item")
              .css("display") === "none" ||
              jQuery(this)
                .closest(".et_pb_de_mach_search_posts_item")
                .css("opacity") !== "1")
          ) {
            filter_item_val = "";
            filter_checked = false;
          }

          if (filter_checked) {
            var filter_index = filter_item_name_arr.indexOf(filter_item_name);
            var url_value = filter_item_val;
            if (filter_index === -1) {
              filter_item_name_arr.push(filter_item_name);
              filter_item_id_arr.push(filter_item_id);
              filter_item_val_arr.push(encodeURI(filter_item_val));
              filter_input_type_arr.push(filter_input_type);
            } else {
              if (
                filter_item_val_arr[filter_index] !== "" &&
                filter_item_val_arr[filter_index] !== url_value
              ) {
                filter_item_val_arr[filter_index] = url_value =
                  (filter_item_val_arr[filter_index] !== ""
                    ? filter_item_val_arr[filter_index] + "|"
                    : "") + filter_item_val;
              } else {
                filter_item_val_arr[filter_index] = url_value = filter_item_val;
              }
            }

            filter_value_exist = true;
          } else {
            var filter_index = filter_item_name_arr.indexOf(filter_item_name);
            if (filter_index == -1) {
              filter_item_name_arr.push(filter_item_name);
              filter_item_id_arr.push(filter_item_id);
              filter_item_val_arr.push(encodeURI(filter_item_val));
              filter_input_type_arr.push(filter_input_type);
            }
          }
        });
    }
  });

  if (
    window.location.search.indexOf("?filter") > -1 &&
    (window.location.search.indexOf("&page") > -1 ||
      window.location.search.indexOf("&orderby") > -1)
  ) {
    filter_value_exist = true;
  }

  jQuery.each(filter_item_name_arr, function (ind, filter_item) {
    //if ( filter_item_val_arr[ind] != '' ) {
    divi_append_url(filter_item, filter_item_val_arr[ind]);
    //}
  });

  if (filter_value_exist == false) {
    var url = document.location.href;
    newurl = url.replace("?filter=true", "");
    window.history.replaceState(null, null, newurl);
  }

  show_hide_reset();

  var changed_url = document.location.href;

  order_changed = jQuery(".divi-filter-archive-loop.main-loop").attr(
    "data-sortchanged"
  );

  var update_via_button = jQuery("#divi_filter").hasClass(
    "updatetype-update_button"
  );

  if (
    current_url != changed_url ||
    is_first_load ||
    reset_filter_clicked == true ||
    page_clicked == true ||
    order_changed == "true" ||
    update_via_button ||
    filter_by_address
  ) {
    divi_filter_posts(
      filter_item_name_arr,
      filter_item_id_arr,
      filter_item_val_arr,
      filter_input_type_arr
    );
  }
}

function divi_filter_posts(
  filter_item_name_arr,
  filter_item_id_arr,
  filter_item_val_arr,
  filter_input_type_arr
) {
  var $main_filtered_posts = jQuery(".divi-filter-archive-loop.main-loop"),
    layoutid = $main_filtered_posts.attr("data-layoutid"),
    noresults = $main_filtered_posts.attr("data-noresults"),
    no_results_text = $main_filtered_posts.attr("data-no_results_text"),
    sortorder = $main_filtered_posts.attr("data-sortorder"),
    orderby_value = $main_filtered_posts.attr("data-orderbyvalue"),
    sorttype = $main_filtered_posts.attr("data-sorttype"),
    sortasc = $main_filtered_posts.attr("data-sortasc"),
    gridstyle = $main_filtered_posts.attr("data-gridstyle"),
    columnscount = $main_filtered_posts.attr("data-columnscount"),
    postnumber = $main_filtered_posts.attr("data-postnumber"),
    loadmore = $main_filtered_posts.attr("data-loadmore"),
    loadmoretext = $main_filtered_posts.attr("data-btntext"),
    loadmoretextloading = $main_filtered_posts.attr("data-btntext_loading"),
    resultcount = $main_filtered_posts.attr("data-resultcount"),
    result_count_single_text = $main_filtered_posts.attr(
      "data-result-count-single-text"
    ),
    result_count_all_text = $main_filtered_posts.attr(
      "data-result-count-all-text"
    ),
    result_count_pagination_text = $main_filtered_posts.attr(
      "data-result-count-pagination-text"
    ),
    countposition = $main_filtered_posts.attr("data-countposition"),
    pagination_position = $main_filtered_posts.attr("data-pagination_position"),
    shortcode_name = $main_filtered_posts.attr("data-shortcode_name"),
    search = $main_filtered_posts.attr("data-search"),
    sortchanged = $main_filtered_posts.attr("data-sortchanged"),
    include_cats = $main_filtered_posts.attr("data-include_category"),
    include_tags = $main_filtered_posts.attr("data-include_tag"),
    include_taxomony = $main_filtered_posts.attr("data-include_taxomony"),
    include_term = $main_filtered_posts.attr("data-include_term"),
    exclude_cats = $main_filtered_posts.attr("data-exclude_category"),
    exclude_posts = $main_filtered_posts.attr("data-post_exclude"),
    hide_non_purchasable = $main_filtered_posts.attr(
      "data-hide_non_purchasable"
    ),
    show_hidden_prod = $main_filtered_posts.attr("data-show_hidden_prod"),
    pagechanged = $main_filtered_posts.attr("data-pagechanged"),
    category_currently_in = $main_filtered_posts.attr("data-current_category"),
    current_custom_category = $main_filtered_posts.attr(
      "data-current_custom_category"
    ),
    current_custom_category_terms = $main_filtered_posts.attr(
      "data-current_custom_category_terms"
    ),
    current_author = $main_filtered_posts.attr("data-current_author"),
    has_map = $main_filtered_posts.attr("data-has-map"),
    map_center_post = $main_filtered_posts.attr("data-map-center-post"),
    hide_marker_label = $main_filtered_posts.attr("data-hide-marker-label"),
    map_selector = $main_filtered_posts.attr("data-map-selector"),
    map_cluster = $main_filtered_posts.attr("data-map-cluster"),
    marker_layout = $main_filtered_posts.attr("data-map-marker-layout"),
    map_all_posts = $main_filtered_posts.attr("data-map-all-posts"),
    loop_current_page = $main_filtered_posts.attr("data-current-page"),
    loadmore_icon = $main_filtered_posts
      .find(".divi-loadmore")
      .attr("data-icon"),
    link_wholegrid = $main_filtered_posts.attr("data-link_wholegrid"),
    link_wholegrid_external = $main_filtered_posts.attr(
      "data-wholegrid-external"
    ),
    link_wholegrid_external_acf = $main_filtered_posts.attr(
      "data-wholegrid-external_acf"
    ),
    onload_cats = $main_filtered_posts.attr("data-onload_cats"),
    onload_tags = $main_filtered_posts.attr("data-onload_tags"),
    onload_taxonomy = $main_filtered_posts.attr("data-onload_tax"),
    onload_terms = $main_filtered_posts.attr("data-onload_terms");
  var data_fields = [];
  var filter_has_current_tax_term = false;

  var filter_item_name_arr_string = filter_item_name_arr.join(", "),
    filter_item_id_arr_string = filter_item_id_arr.join(", "),
    filter_item_val_arr_string = filter_item_val_arr.join(", "),
    filter_input_type_arr_string = filter_input_type_arr.join(", ");

  var ul_classes = "";

  var current_loop_taxonomy = $main_filtered_posts.data("current-taxonomy");
  var current_loop_taxterm = $main_filtered_posts.data("current-taxterm");

  jQuery(".et_pb_checkbox_select_wrapper").removeClass(
    "checkbox_select_expanded"
  );

  if ($main_filtered_posts.find(".divi-filter-loop-container").length > 0) {
    if ($main_filtered_posts.find(".no-results-layout").length > 0) {
      ul_classes = $main_filtered_posts
        .find(".no-results-layout")
        .data("classes");
    } else {
      ul_classes = $main_filtered_posts
        .find(".divi-filter-loop-container > ul")
        .attr("class");
    }
  }

  if ($main_filtered_posts.hasClass("is_search_page")) {
    divi_append_url("is_search", true);
  }

  // GET FILTER VALUES
  var added_filter_items = [];
  jQuery(".et_pb_de_mach_filter_posts .divi-acf").each(function (i, obj) {
    if (
      jQuery(this)
        .closest(".et_pb_de_mach_search_posts_item")
        .hasClass("conditional_hide")
    ) {
      return true;
    }

    var filter_item_name = jQuery(this).data("name"),
      filter_item_val = jQuery(this).val(),
      input_type = jQuery(this).attr("data-filtertype"),
      acf_type = jQuery(this)
        .closest(".et_pb_contact")
        .find(".et_pb_contact_field")
        .data("type");

    if (filter_item_val == null) filter_item_val = "";
    var val_type = jQuery(this)
      .closest(".search_filter_cont")
      .data("value-type");

    //////////////// CHECKBOX
    if (
      input_type == "divi-checkboxsingle" ||
      input_type == "divi-checkboxmulti" ||
      input_type == "customcategory" ||
      input_type == "customtag"
    ) {
      if (jQuery(this).is("select")) {
        if (
          !jQuery(this)
            .closest(".search_filter_cont")
            .hasClass("condition-field") ||
          jQuery(this).find("option:selected").data("type") != "has-child"
        ) {
          if (filter_item_val != "") {
            data_fields.push({
              fieldList: [
                {
                  name: filter_item_name,
                  val: filter_item_val,
                  type: "radio",
                  acf_type: acf_type,
                  val_type: val_type,
                },
              ],
            });
          }
        } else {
          filter_item_val = "";
        }

        if (filter_item_name == current_loop_taxonomy) {
          jQuery(this)
            .find("option")
            .each(function () {
              if (jQuery(this).attr("value") == current_loop_taxterm) {
                filter_has_current_tax_term = true;
              }
            });
        }
      } else {
        var parent = jQuery(this).closest(".et_pb_contact_field_options_list");
        var checked = parent.find("input:checked");
        var checked_arr = [];
        checked.each(function () {
          if (
            !jQuery(this)
              .closest(".search_filter_cont")
              .hasClass("condition-field") ||
            !(
              jQuery(this).parent().hasClass("is-collapsible") &&
              jQuery(this).parent().data("prevent_collapse") == "on" &&
              jQuery(this).data("type") == "has-child"
            )
          ) {
            if (jQuery(this).val() != "") {
              checked_arr.push(jQuery(this).val());
            }
          }
        });

        filter_item_val = checked_arr.join(",");

        if (
          added_filter_items.indexOf(filter_item_name) == -1 &&
          filter_item_val != ""
        ) {
          data_fields.push({
            fieldList: [
              {
                name: filter_item_name,
                val: filter_item_val,
                type: "radio",
                acf_type: acf_type,
                val_type: val_type,
              },
            ],
          });
        }

        if (filter_item_name == current_loop_taxonomy) {
          parent.find("input").each(function () {
            if (jQuery(this).val() == current_loop_taxterm) {
              filter_has_current_tax_term = true;
            }
          });
        }
      }
    } else if (input_type == "rangeslider") {
      // check if item is empty first
      if (filter_item_val != "") {
        var range_val_array = filter_item_val.split(";");
        if (range_val_array.length > 1) {
          if (
            typeof jQuery(this).attr("data-current_max") != "undefined" &&
            range_val_array[1] == jQuery(this).attr("data-current_max")
          ) {
            range_val_array[1] = jQuery(this).attr("data-origin_max");
          }
          filter_item_val = range_val_array.join(";");
        }
        if (reset_filter_clicked == true) {
          filter_item_val = "";
        } else {
          data_fields.push({
            fieldList: [
              {
                name: filter_item_name,
                val: filter_item_val,
                type: "range",
                acf_type: acf_type,
                val_type: val_type,
              },
            ],
          });
        }
      }
    } else if (input_type == "customtaxonomy") {
      if (filter_item_val != "") {
        data_fields.push({
          fieldList: [
            {
              name: filter_item_name,
              val: filter_item_val,
              type: "customtaxonomy",
              acf_type: acf_type,
              val_type: val_type,
            },
          ],
        });
      }
    } else if (input_type == "acfselectmulitple") {
      if (filter_item_val != "") {
        data_fields.push({
          fieldList: [
            {
              name: filter_item_name,
              val: filter_item_val,
              type: "acfselectmulitple",
              acf_type: acf_type,
              val_type: val_type,
            },
          ],
        });
      }
    } else if (input_type == "address") {
      if (filter_item_val != "") {
        data_fields.push({
          fieldList: [
            {
              name: filter_item_name,
              val: filter_item_val,
              type: "map_address",
              acf_type: acf_type,
              val_type: val_type,
            },
          ],
        });
      }
    } else if (input_type == "radius") {
      if (
        filter_item_val != "" &&
        jQuery(".divi-acf.divi-acf-map").val() != ""
      ) {
        data_fields.push({
          fieldList: [
            {
              name: filter_item_name,
              val: filter_item_val,
              type: "map_radius",
              acf_type: acf_type,
              val_type: val_type,
            },
          ],
        });
      }
    } else if (input_type == "datepicker") {
      var start_date = jQuery(this).attr("data-start_date");
      var end_date = jQuery(this).attr("data-end_date");
      var filter_item_val = "";

      if (start_date != "" && end_date != "") {
        if (start_date != end_date) {
          filter_item_val = start_date + ";" + end_date;
        } else {
          filter_item_val = start_date;
        }
      }
      if (filter_item_val != "") {
        data_fields.push({
          fieldList: [
            {
              name: filter_item_name,
              val: filter_item_val,
              type: "datepicker",
              acf_type: acf_type,
              val_type: val_type,
            },
          ],
        });
      }
    } else {
      // check if item is empty first
      if (filter_item_val != "") {
        data_fields.push({
          fieldList: [
            {
              name: filter_item_name,
              val: filter_item_val,
              type: "other",
              acf_type: acf_type,
              val_type: val_type,
            },
          ],
        });
      }
    }

    if (
      added_filter_items.indexOf(filter_item_name) == -1 &&
      filter_item_val != ""
    ) {
      added_filter_items.push(filter_item_name);
    }
  });

  if (typeof search != "undefined" && search != "") {
    data_fields.push({
      fieldList: [
        {
          name: "s",
          val: search,
          type: "search",
        },
      ],
    });
  }

  jQuery.each(data_fields, function (inx, obj) {
    var name_index = filter_item_name_arr.indexOf(obj["fieldList"][0]["name"]);
    if (name_index != -1) {
      data_fields[inx]["fieldList"][0]["val"] = filter_item_val_arr[name_index];
    }
  });

  var current_page = 1;

  if (loadmore == "on") {
    //postnumber = parseInt(postnumber) * parseInt(loop_current_page);
  } else {
    if (pagechanged == "true") {
      current_page = parseInt(loop_current_page);
      $main_filtered_posts.removeAttr("data-pagechanged");
    } else {
      divi_append_url("page", "");
    }
  }

  $main_filtered_posts.removeAttr("data-sortchanged");

  var $loop_module = jQuery(".divi-filter-archive-loop.main-loop"),
    post_var = $loop_module.attr("data-filter-var");

  if (
    jQuery(".main-loop")
      .closest(".et_pb_de_mach_archive_loop")
      .hasClass("wishlist_loop")
  ) {
    var looptype = "wishlist";
    var get_saved_types = jQuery("#wishlist_types").attr("data-types");
  } else {
    var looptype = "normal";
    var get_saved_types = "";
  }

  // get data-disable-sticky-posts
  var disable_sticky_posts = $loop_module.attr("data-disable-sticky-posts");
  // get include-sticky-posts
  var include_sticky_posts = $loop_module.attr("data-include-sticky-posts");
  // get data-include-sticky-posts-only
  var include_sticky_posts_only = $loop_module.attr(
    "data-include-sticky-posts-only"
  );

  // get data-loop-var json
  // var loop_var = $loop_module.attr("data-loop-var");
  // if $loop_module.attr("data-loop-var") exsists
  if ($loop_module.attr("data-loop-var")) {
    var loop_var = JSON.stringify(
      JSON.parse($loop_module.attr("data-loop-var"))
    );
  }

  data = {
    action: "divi_filter_ajax_handler",
    security: filter_ajax_object.security,
    layoutid: layoutid,
    looptype: looptype,
    get_saved_types: get_saved_types,
    noresults: noresults,
    no_results_text: no_results_text,
    filter_item_name: filter_item_name_arr_string,
    filter_item_id: filter_item_id_arr_string,
    filter_item_val: filter_item_val_arr_string,
    filter_input_type: filter_input_type_arr_string,
    orderby_param: orderby_value,
    sortorder: sortorder,
    sortasc: sortasc,
    sorttype: sorttype,
    gridstyle: gridstyle,
    columnscount: columnscount,
    postnumber: postnumber,
    loadmore: loadmore,
    loadmoretext: loadmoretext,
    include_cats: include_cats,
    include_tags: include_tags,
    include_taxomony: include_taxomony,
    include_term: include_term,
    exclude_cats: exclude_cats,
    resultcount: resultcount,
    result_count_single_text: result_count_single_text,
    result_count_all_text: result_count_all_text,
    result_count_pagination_text: result_count_pagination_text,
    countposition: countposition,
    pagination_position: pagination_position,
    shortcode_name: shortcode_name,
    loop_var: loop_var,
    loadmoretextloading: loadmoretextloading,
    has_map: has_map,
    map_all_posts: map_all_posts,
    map_selector: map_selector,
    map_center_post: map_center_post,
    marker_layout: marker_layout,
    current_page: current_page,
    query: post_var,
    loadmore_icon: loadmore_icon,
    link_wholegrid: link_wholegrid,
    link_wholegrid_external: link_wholegrid_external,
    link_wholegrid_external_acf: link_wholegrid_external_acf,
    hide_non_purchasable: hide_non_purchasable,
    show_hidden_prod: show_hidden_prod,
    ul_classes: ul_classes,
    filter_has_current_tax_term: filter_has_current_tax_term,
    disable_sticky_posts: disable_sticky_posts,
    include_sticky_posts: include_sticky_posts,
    "data-include-sticky-posts-only": include_sticky_posts_only,
    data_fields,
  };

  if (
    typeof $main_filtered_posts.attr("data-groupping-taxonomy") != "undefined"
  ) {
    data.groupping_taxonomy = $main_filtered_posts.attr(
      "data-groupping-taxonomy"
    );
  }

  if (typeof current_loop_taxonomy != "undefined") {
    data.current_loop_taxonomy = current_loop_taxonomy;
  }

  if (typeof exclude_posts != "undefined") {
    data.exclude_posts = exclude_posts;
  }

  if (typeof current_loop_taxterm != "undefined") {
    data.current_loop_taxterm = current_loop_taxterm;
  }

  if (sortorder == "acf_date_picker") {
    data.acf_order_field = $main_filtered_posts.attr("data-acf-order-field");
    data.acf_order_method = $main_filtered_posts.attr("data-acf-order-method");
  }

  if (jQuery(".divi-acf-map").length > 0) {
    data.acf_map_field = jQuery(".divi-acf-map").attr("name");
    data.acf_map_lat = jQuery(".map_address_lat").val();
    data.acf_map_lng = jQuery(".map_address_lng").val();
    data.acf_map_radius = jQuery(".divi-acf-map-radius").val();
    data.acf_map_radius_type = jQuery(".divi-acf-map-radius").data(
      "radius-type"
    );
  }

  if (reset_filter_clicked == true || (page_clicked && is_first_load)) {
    if (onload_cats != "") {
      data.onload_cats = onload_cats;
    }

    if (onload_tags != "") {
      data.onload_tags = onload_tags;
    }

    if (onload_taxonomy != "" && onload_terms != "") {
      data.onload_taxonomy = onload_taxonomy;
      data.onload_terms = onload_terms;
    }
  }

  if (layoutid == "none") {
    data.show_rating = $main_filtered_posts.attr("data-show_rating");
    data.show_price = $main_filtered_posts.attr("data-show_price");
    data.show_excerpt = $main_filtered_posts.attr("data-show_excerpt");
    data.show_add_to_cart = $main_filtered_posts.attr("data-show_add_to_cart");
  }

  data.show_sort = $main_filtered_posts.attr("data-show_sort");

  filter_ajax_request = jQuery.ajax({
    url: filter_ajax_object.ajax_url,
    data: data,
    type: "POST",
    timeout: 30000,
    beforeSend: function (xhr) {
      jQuery.event.trigger({
        type: "divi_filter_before",
      });
      is_filtering = true;
      // $main_filtered_posts.prepend('<div class="ajax-loading"><div class="spinner donut-cont"></div></div>');
      $main_filtered_posts
        .closest(".filtered-posts-cont")
        .find(".filtered-posts-loading")
        .prepend(
          '<div class="ajax-loading"><div class="lines"><div class="line"></div><div class="line"></div><div class="line"></div></div><div class="spinner donut-cont"><div class="donut"></div></div><div class="spinner donutmulti-cont"><div class="donut multi"></div></div><div class="spinner ripple-cont"><div class="ripple"></div></div></div>'
        );
      jQuery("#divi_filter").css("pointer-events", "none");
      jQuery(".divi-acf").attr("disabled", "disabled");
      jQuery(".divi-acf.js-range-slider").each(function () {
        var irs_data = jQuery(this).data("ionRangeSlider");
        if (typeof irs_data != "undefined") {
          irs_data.update({ from_fixed: true, to_fixed: true });
        }
      });
      jQuery(
        ".et_pb_de_mach_search_posts_item,.et_pb_de_mach_orderby,.divi-filter-result-count"
      ).animate({ opacity: 0.5 }, 250);
    },
    success: function (data) {
      if (data) {
        if (!(page_clicked && is_first_load)) {
          is_first_load = false;
        }

        // var newurl_correct = data.newurl.replace('%5B0%5D','')
        // window.history.pushState("", "", newurl_correct);
        jQuery(".divi-acf.js-range-slider").each(function () {
          var irs_data = jQuery(this).data("ionRangeSlider");
          if (typeof irs_data != "undefined") {
            irs_data.update({ from_fixed: false, to_fixed: false });
          }
        });
        if (
          $main_filtered_posts.find(" > .loop-grid").length > 0 ||
          $main_filtered_posts.find(" > .no-results-layout").length > 0 ||
          $main_filtered_posts.find(
            " > .divi-filter-loop-container > .loop-grid"
          ).length > 0 ||
          $main_filtered_posts.find(
            " > .divi-filter-loop-container > .no-results-layout"
          ).length > 0
        ) {
          var result_parent;
          if (
            $main_filtered_posts.find(" > .divi-filter-loop-container").length >
            0
          ) {
            if (
              $main_filtered_posts.find(
                " > .divi-filter-loop-container > .no-results-layout"
              ).length > 0
            ) {
              result_parent = $main_filtered_posts
                .find(" > .divi-filter-loop-container > .no-results-layout")
                .parent();
            } else {
              result_parent = $main_filtered_posts
                .find(" > .divi-filter-loop-container > .loop-grid")
                .parent();
            }
          } else {
            if ($main_filtered_posts.find(" > .no-results-layout").length > 0) {
              result_parent = $main_filtered_posts
                .find(" > .no-results-layout")
                .parent();
            } else {
              result_parent = $main_filtered_posts
                .find(" > .loop-grid")
                .parent();
            }
          }
          $main_filtered_posts.find(".loop-grid").remove();
          $main_filtered_posts.find(".no-results-layout").remove();
          result_parent.append(data.posts);
        } else if ($main_filtered_posts.find("ul").length > 0) {
          var result_parent;
          result_parent = $main_filtered_posts.find("ul").parent();
          $main_filtered_posts.find("ul").remove();
          result_parent.prepend(data.posts);
        }
        $main_filtered_posts.find(".df-inner-styles").remove();
        $main_filtered_posts.find(".df-loadmore-inner-styles").remove();
        $main_filtered_posts.append(data.css_output);

        $main_filtered_posts.attr(
          "data-current-page",
          data.loadmore_param.current_page
        );

        if (data.loadmore_param.current_page == 1) {
          $main_filtered_posts.attr(
            "data-max-page",
            data.loadmore_param.max_num_pages
          );
        }

        $main_filtered_posts
          .removeClass("has-result")
          .removeClass("no-results-layout")
          .addClass(data.filter_result);

        if (data.before_shop_loop) {
          $main_filtered_posts
            .closest(".et_pb_module")
            .find(".filter-param-tags")
            .prevAll()
            .remove();
          $main_filtered_posts
            .closest(".et_pb_module")
            .find(".filter-param-tags")
            .before(data.before_shop_loop);
        }

        if (typeof data.after_shop_loop != "undefined") {
          $main_filtered_posts
            .closest(".filtered-posts-cont")
            .nextAll()
            .remove();
          $main_filtered_posts
            .closest(".filtered-posts-cont")
            .after(data.after_shop_loop);
        }

        if (data.loadmore_param.current_page == 1) {
          $main_filtered_posts.attr(
            "data-max-page",
            data.loadmore_param.max_num_pages
          );
        }

        $main_filtered_posts.attr(
          "data-filter-var",
          data.loadmore_param.post_var
        );

        if ("undefined" != typeof wc_add_to_cart_variation_params) {
          jQuery(".variations_form").each(function () {
            jQuery(this).wc_variation_form();
          });
        }

        jQuery(".single_add_to_cart_button").addClass("ajax_add_to_cart");

        if ("undefined" != typeof ajax_disabled_products_class) {
          $(
            "." + ajax_disabled_products_class + " .single_add_to_cart_button"
          ).removeClass("ajax_add_to_cart");
        }

        //resizeAllGridItems();
        //show_filter_counts();
        // same_height_cards();

        if ($main_filtered_posts.find(".et_pb_map_container").length > 0) {
          $main_filtered_posts.find(".et_pb_map_container").each(function () {
            if (typeof et_pb_map_init === "function") {
              et_pb_map_init(jQuery(this));
            }
          });
        }

        if (
          map_all_posts == "off" &&
          data.map_data &&
          jQuery(map_selector).length > 0
        ) {
          jQuery(map_selector).each(function () {
            var _this = jQuery(this);
            var map_obj = jQuery(this).data("map");
            var custom_marker_icon;
            if (
              typeof $main_filtered_posts.attr("data-map_icon") != "undefined"
            ) {
              custom_marker_icon = {
                url: $main_filtered_posts.attr("data-map_icon"),
                //scaledSize: new google.maps.Size(32, 32), // scaled size
                //origin: new google.maps.Point(0,0), // origin
                //anchor: new google.maps.Point(0, 0) // anchor
              };
            }
            for (let i = 0; i < markers.length; i++) {
              markers[i].setMap(null);
            }

            if (map_cluster == "on") {
              markerClusterer.removeMarkers(markers);
              markerClusterer.repaint();
            }
            markers = [];
            locations = [];
            labels = [];
            i_windows = [];
            if (map_cluster != "on") {
              jQuery.each(data.map_data, function (ind, map) {
                locations.push({
                  lat: parseFloat(map.lat),
                  lng: parseFloat(map.lng),
                });
                if (
                  typeof hide_marker_label !== "undefined" &&
                  hide_marker_label == "off"
                ) {
                  labels.push(map.title.charAt(0));
                } else {
                  labels.push("");
                }

                i_windows.push(map.infoview);
              });

              if (typeof map_obj != "undefined") {
                markers = locations.map((location, i) => {
                  var marker;
                  if (typeof custom_marker_icon != "undefined") {
                    marker = new google.maps.Marker({
                      position: location,
                      label: labels[i],
                      icon: custom_marker_icon,
                      map: map_obj,
                    });
                  } else {
                    marker = new google.maps.Marker({
                      position: location,
                      label: labels[i],
                      map: map_obj,
                    });
                  }

                  if (i == 0 && map_center_post == "on") {
                    map_obj.setCenter(location);
                  }

                  var i_window = new google.maps.InfoWindow({
                    content: i_windows[i],
                  });

                  google.maps.event.addListener(map_obj, "click", function () {
                    i_window.close();
                  });

                  google.maps.event.addListener(marker, "click", function () {
                    i_window.open(map_obj, marker);
                  });

                  return marker;
                });
              }
            } else {
              /* Marker Clusterer */
              jQuery.each(data.map_data, function (ind, map) {
                locations.push({
                  lat: parseFloat(map.lat),
                  lng: parseFloat(map.lng),
                });
                if (
                  typeof hide_marker_label !== "undefined" &&
                  hide_marker_label == "off"
                ) {
                  labels.push(map.title.charAt(0));
                } else {
                  labels.push("");
                }
                i_windows.push(map.infoview);
              });

              if (typeof map_obj != "undefined") {
                markers = locations.map((location, i) => {
                  var marker;
                  if (typeof custom_marker_icon != "undefined") {
                    marker = new google.maps.Marker({
                      position: location,
                      icon: custom_marker_icon,
                      label: labels[i],
                    });
                  } else {
                    marker = new google.maps.Marker({
                      position: location,
                      label: labels[i],
                    });
                  }

                  if (i == 0 && map_center_post == "on") {
                    map_obj.setCenter(location);
                  }

                  var i_window = new google.maps.InfoWindow({
                    content: i_windows[i],
                  });

                  google.maps.event.addListener(map_obj, "click", function () {
                    i_window.close();
                  });

                  google.maps.event.addListener(marker, "click", function () {
                    i_window.open(map_obj, marker);
                  });

                  return marker;
                });

                markerClusterer = new MarkerClusterer(map_obj, markers, {
                  imagePath: clusterer_obj.imgPath,
                });
              }
            }
          });
        }

        if (jQuery.fn.fitVids) {
          jQuery("#main-content").fitVids({
            customSelector:
              "iframe[src^='http://www.hulu.com'], iframe[src^='http://www.dailymotion.com'], iframe[src^='http://www.funnyordie.com'], iframe[src^='https://embed-ssl.ted.com'], iframe[src^='http://embed.revision3.com'], iframe[src^='https://flickr.com'], iframe[src^='http://blip.tv'], iframe[src^='http://www.collegehumor.com']",
          });
        }
      } else {
        $main_filtered_posts.html("No posts found.");
      }

      if (typeof get_post_popup == "function") {
        get_post_popup();
      }

      is_searching = false;
      show_filter_counts();

      if (jQuery(window).width() < 980) {
        if (
          jQuery(".et_pb_de_mach_filter_posts").hasClass(
            "auto_close_filter_mobile"
          )
        ) {
          jQuery("body").removeClass("mobile-filter-open");
          jQuery("#divi_filter").each(function () {
            if (jQuery(this).css("display") == "block") {
              jQuery(this).slideToggle();

              if (
                jQuery(this).prev().is("a") &&
                jQuery(this).prev().hasClass("mobile_toggle_trigger")
              ) {
                var toggle_text = jQuery(this).prev().attr("data-toggle_text");
                jQuery(this)
                  .prev()
                  .attr("data-toggle_text", jQuery(this).prev().text());
                jQuery(this).prev().text(toggle_text);
              }
            }
          });
        }
      }

      var filter_settings = jQuery("#divi_filter").attr("data-settings");

      if (typeof filter_settings !== "undefined") {
        var dataObj = JSON.parse(filter_settings);

        var scrollto = dataObj.scrollto,
          scrollto_where = dataObj.scrollto_where,
          scrollto_section = dataObj.scrollto_section,
          scrollto_fine_tune = dataObj.scrollto_fine_tune;
      } else {
        var scrollto = "",
          scrollto_where = "",
          scrollto_section = "",
          scrollto_fine_tune = "";
      }

      var pagi_scrollto = jQuery(".divi-filter-archive-loop.main-loop").attr(
        "data-pagi_scrollto"
      );
      var pagi_scrollto_fine = jQuery(
        ".divi-filter-archive-loop.main-loop"
      ).attr("data-pagi_scrollto_fine");
      var loadmore_scrollto = jQuery(
        ".divi-filter-archive-loop.main-loop"
      ).attr("data-loadmore");
      var masonry_ajax_buffer = jQuery(
        ".divi-filter-archive-loop.main-loop"
      ).attr("data-masonry_ajax_buffer");

      if (scrollto_where == "all") {
        breakpoint = "5000";
        min_breakpoint = "0";
      } else if (scrollto_where == "desktop") {
        breakpoint = "5000";
        min_breakpoint = "981";
      } else if (scrollto_where == "tab_mob") {
        breakpoint = "980";
        min_breakpoint = "0";
      } else {
        breakpoint = "767";
        min_breakpoint = "0";
      }

      const scrollToPos = () => {
        jQuery("html, body").animate(
          {
            scrollTop: $scrolltosection.offset().top + scrollto_fine_tune_dis,
          },
          500
        );
      };

      const scrollToNeg = () => {
        jQuery("html, body").animate(
          {
            scrollTop: $scrolltosection.offset().top - scrollto_fine_tune_dis,
          },
          500
        );
      };

      if (page_clicked == true) {
        if (pagi_scrollto == "on") {
          ($scrolltosection = jQuery(".divi-filter-archive-loop.main-loop")),
            (scrollto_fine_tune = pagi_scrollto_fine.replace("px", ""));

          if (scrollto_fine_tune.match("^-")) {
            scrollto_fine_tune = scrollto_fine_tune.replace("-", "");
            scrollto_fine_tune_dis = parseInt(scrollto_fine_tune);
            if (
              jQuery(".et_pb_de_mach_filter_posts").hasClass(
                "auto_close_filter_mobile"
              )
            ) {
              setTimeout(scrollToNeg, 500);
            } else {
              scrollToNeg();
            }
          } else {
            scrollto_fine_tune_dis = parseInt(scrollto_fine_tune);
            if (
              jQuery(".et_pb_de_mach_filter_posts").hasClass(
                "auto_close_filter_mobile"
              )
            ) {
              setTimeout(scrollToPos, 500);
            } else {
              scrollToPos();
            }
          }
        }
      } else {
        if (scrollto == "on") {
          if (
            jQuery(window).width() > min_breakpoint &&
            jQuery(window).width() <= breakpoint
          ) {
            if (jQuery("." + scrollto_section).length > 0) {
              $scrolltosection = jQuery("." + scrollto_section);
            } else {
              $scrolltosection = jQuery(".divi-filter-archive-loop");
            }

            scrollto_fine_tune = scrollto_fine_tune.replace("px", "");
            if (scrollto_fine_tune.match("^-")) {
              scrollto_fine_tune = scrollto_fine_tune.replace("-", "");
              scrollto_fine_tune_dis = parseInt(scrollto_fine_tune);
              if (
                jQuery(".et_pb_de_mach_filter_posts").hasClass(
                  "auto_close_filter_mobile"
                )
              ) {
                setTimeout(scrollToNeg, 500);
              } else {
                scrollToNeg();
              }
            } else {
              scrollto_fine_tune_dis = parseInt(scrollto_fine_tune);
              if (
                jQuery(".et_pb_de_mach_filter_posts").hasClass(
                  "auto_close_filter_mobile"
                )
              ) {
                setTimeout(scrollToPos, 500);
              } else {
                scrollToPos();
              }
            }
          }
        }
      }

      if (typeof resizeAllGridItems == "function") {
        resizeAllGridItems();
        var totalImgs = jQuery(".divi-filter-archive-loop.main-loop")
          .children()
          .eq(0)
          .find("img").length;
        jQuery(".divi-filter-archive-loop.main-loop")
          .children()
          .eq(0)
          .find("img")
          .one("load", function () {
            totalImgs--;
            if (totalImgs == 0) {
              resizeAllGridItems();
            }
          })
          .each(function () {
            if (this.complete) {
              jQuery(this).trigger("load"); // For jQuery >= 3.0
            }
          });

        setTimeout(function () {
          resizeAllGridItems();
        }, masonry_ajax_buffer);
      }

      if (
        $main_filtered_posts.find(".grid-col").find(".gallery_vars").length > 0
      ) {
        var gallery_vars = $main_filtered_posts
          .find(".grid-col")
          .find(".gallery_vars")
          .attr("data-gallery_vars");
        var gallery_type = $main_filtered_posts
          .find(".grid-col")
          .find(".gallery_vars")
          .attr("data-gallery_type");
        gallery_vars = gallery_vars.replace(/,\s*$/, "");
        gallery_vars = gallery_vars.replace(/,/g, ", ");
        gallery_vars = gallery_vars.replace(/'/g, '"');
        gallery_vars = "{" + gallery_vars + "}";

        gallery_vars = JSON.parse(gallery_vars);

        jQuery(".et_pb_de_mach_acf_slider_containter").each(function (i, obj) {
          if (jQuery(this).hasClass("slick-initialized")) {
            jQuery(this).slick("unslick");
          }
          jQuery(this).slick(gallery_vars);
        });

        if (gallery_type == "gallery") {
          var gallery_nav_vars = $main_filtered_posts
            .find(".grid-col")
            .find(".gallery_vars")
            .attr("data-gallery_nav");
          gallery_nav_vars = gallery_nav_vars.replace(/,\s*$/, "");
          gallery_nav_vars = gallery_nav_vars.replace(/,/g, ", ");
          gallery_nav_vars = gallery_nav_vars.replace(/'/g, '"');
          gallery_nav_vars = "{" + gallery_nav_vars + "}";

          gallery_nav_vars = JSON.parse(gallery_nav_vars);
          gallery_nav_vars.asNavFor = ".et_pb_de_mach_acf_slider_containter";
          gallery_nav_vars.focusOnSelect = true;

          jQuery(".et_pb_de_mach_acf_slider_containter_nav").each(function (
            i,
            obj
          ) {
            if (jQuery(this).hasClass("slick-initialized")) {
              jQuery(this).slick("unslick");
            }
            jQuery(this).slick(gallery_nav_vars);
          });
        }
      }

      jQuery("#divi_filter").css("pointer-events", "all");

      if (typeof window.et_pb_init_modules == "function") {
        //window.et_pb_init_modules();
      }

      // animate elements after ajax
      jQuery(".et-waypoint").each(function () {
        var $this = jQuery(this);
        var offset = $this.data("offset") || "100%";
        var handler = function () {
          $this.addClass("et-animated");
        };
        var waypoint = new Waypoint({
          element: $this[0],
          handler: handler,
          offset: offset,
        });
      });

      jQuery(".variations_form").each(function () {
        jQuery(this).wc_variation_form();
        jQuery(this).trigger("check_variations");
      });

      jQuery.event.trigger({
        type: "divi_filter_completed",
      });
      reset_filter_clicked = false;
      page_clicked = false;
      order_changed = false;
      filter_by_address = false;
    },
    error: function (xhr, status, error) {
      if (status !== "abort") {
        console.log("Error:", error);
      }
    },
  });

  return false;
}

function divi_remove_filters() {
  jQuery(".et_pb_contact_field_radio").removeClass("hidethis");

  jQuery(".refine-filters > span").each(function () {
    var filter_item_name = jQuery(this).attr("data-filter-name"),
      filter_item_val = jQuery(this).attr("data-filter-val");
    var filter_item_val_array = filter_item_val.split(",");

    var counts = {};

    jQuery.each(filter_item_val_array, function (key, value) {
      if (!counts.hasOwnProperty(value)) {
        counts[value] = 1;
      } else {
        counts[value]++;
      }
    });

    jQuery('input[data-name="' + filter_item_name + '"]').each(function () {
      if (filter_item_val_array.indexOf(jQuery(this).val()) > -1) {
      } else {
        jQuery(this).closest(".et_pb_contact_field_radio").addClass("hidethis");
      }
    });
  });
}

function show_hide_reset() {
  jQuery(".divi-filter-containter").each(function () {
    var is_filter_selected = false;
    jQuery(this)
      .find(".search_filter_cont")
      .each(function () {
        var dataType = jQuery(this)
          .find(".et_pb_contact_field")
          .attr("data-filtertype");
        switch (dataType) {
          case "select":
            if (
              jQuery(this).find(".et_pb_contact_field select").eq(0).val() != ""
            )
              is_filter_selected = true;
            break;
          case "checkbox":
            jQuery(this)
              .find(".et_pb_contact_field_options_list")
              .find("input")
              .each(function () {
                if (jQuery(this).val() != "" && jQuery(this).is(":checked")) {
                  is_filter_selected = true;
                }
              });
            break;
          case "radio":
            jQuery(this)
              .find(".et_pb_contact_field_options_list")
              .find("input")
              .each(function () {
                if (jQuery(this).val() != "" && jQuery(this).is(":checked")) {
                  is_filter_selected = true;
                }
              });
            break;
          case "range":
            var rangeData = jQuery(this)
              .find(".js-range-slider")
              .data("ionRangeSlider");
            if (typeof rangeData !== "undefined") {
              if (
                rangeData.options.min != rangeData.result.from ||
                rangeData.options.max != rangeData.result.to
              ) {
                is_filter_selected = true;
              }
            }
            break;
          case "input":
            jQuery(this)
              .find(".et_pb_contact_field")
              .find("input")
              .each(function () {
                if (jQuery(this).val() != "") {
                  is_filter_selected = true;
                }
              });
            break;
        }
      });

    if (is_filter_selected) {
      jQuery(this).parent().parent().find(".reset-filters").show();
    } else {
      jQuery(this).parent().parent().find(".reset-filters").hide();
    }
  });
}

var get_sub_cat_ajax;

function init_filter_params() {
  // look for filter_var and check enable this option in the filter
  var post_var = jQuery(".divi-filter-archive-loop.main-loop").attr(
    "data-filter-var"
  );

  if (typeof post_var != "undefined") {
    var dataObj = JSON.parse(post_var);
    if (typeof dataObj.meta_query != "undefined") {
      jQuery.each(dataObj.meta_query, function (index, val) {
        if (val.key == "_weight") {
          val.key = "product_weight";
        } else if (val.key == "_wc_average_rating") {
          val.key = "product_rating";
        }

        if (
          !jQuery('[data-name="' + val.key + '"]')
            .closest(".et_pb_de_mach_search_posts_item")
            .hasClass("uncheck_init_terms")
        ) {
          if (
            jQuery('[data-name="' + val.key + '"]')
              .closest(".et_pb_de_mach_search_posts_item")
              .hasClass("filter_params")
          ) {
            if (
              jQuery('[data-name="' + val.key + '"]')
                .closest(".et_pb_de_mach_search_posts_item")
                .hasClass("filter_params_yes_title")
            ) {
              var filter_param_type = "title";
            } else {
              var filter_param_type = "no-title";
            }

            var type = jQuery('[data-name="' + val.key + '"]').attr(
                "data-field_type"
              ),
              slug = jQuery('[data-name="' + val.key + '"]').data("name"),
              name = jQuery('[data-name="' + val.key + '"]')
                .closest(".et_pb_de_mach_search_posts_item")
                .find(".et_pb_contact_field_options_title ")
                .html(),
              iris_to = jQuery('[data-name="' + val.key + '"]')
                .closest(".et_pb_de_mach_search_posts_item")
                .find(".irs-to")
                .text(),
              irs_from = jQuery('[data-name="' + val.key + '"]')
                .closest(".et_pb_de_mach_search_posts_item")
                .find(".irs-from")
                .text();

            if (type == "select") {
              if (
                jQuery('[data-name="' + val.key + '"]')
                  .find("option:selected")
                  .val() != ""
              ) {
                var value = jQuery('[data-name="' + val.key + '"]')
                  .find("option:selected")
                  .text();
                divi_filter_params(
                  type,
                  slug,
                  value,
                  name,
                  filter_param_type,
                  iris_to,
                  irs_from
                );
              }
            } else if (type == "radio" || type == "checkbox") {
              jQuery('[data-name="' + val.key + '"]:checked').each(function () {
                var value = jQuery(this)
                  .parent()
                  .find(".radio-label")
                  .attr("title");
                divi_filter_params(
                  type,
                  slug,
                  value,
                  name,
                  filter_param_type,
                  iris_to,
                  irs_from
                );
              });
            } else {
              var value = jQuery('[data-name="' + val.key + '"]').val();
              divi_filter_params(
                type,
                slug,
                value,
                name,
                filter_param_type,
                iris_to,
                irs_from
              );
            }
          }
        }
      });
    }

    if (typeof dataObj.tax_query != "undefined") {
      jQuery.each(dataObj.tax_query, function (index, val) {
        if (typeof val == "object" && typeof val.relation != "undefined") {
          jQuery.each(val, function (sub_index, sub_val) {
            if (
              typeof sub_val == "object" &&
              typeof sub_val.taxonomy != "undefined"
            ) {
              if (Array.isArray(sub_val.terms)) {
                jQuery.each(sub_val.terms, function (term_index, term_val) {
                  if (
                    jQuery('[data-name="' + sub_val.taxonomy + '"]').length > 0
                  ) {
                    jQuery('[data-name="' + sub_val.taxonomy + '"]').each(
                      function () {
                        if (jQuery(this).is("select")) {
                          if (
                            jQuery(this).find(
                              'option[value="' + term_val + '"]'
                            ).length > 0
                          ) {
                            jQuery(this).find("option").removeProp("selected");
                            jQuery(this)
                              .find('option[value="' + term_val + '"]')
                              .prop("selected", true);
                            if (
                              jQuery(this)
                                .closest(".et_pb_de_mach_search_posts_item")
                                .hasClass("filter_params")
                            ) {
                              if (
                                jQuery(this)
                                  .closest(".et_pb_de_mach_search_posts_item")
                                  .hasClass("filter_params_yes_title")
                              ) {
                                var filter_param_type = "title";
                              } else {
                                var filter_param_type = "no-title";
                              }
                              var type = jQuery(this).attr("data-field_type"),
                                name = jQuery(this)
                                  .closest(".et_pb_de_mach_search_posts_item")
                                  .find(".et_pb_contact_field_options_title ")
                                  .html(),
                                iris_to = jQuery(this)
                                  .closest(".et_pb_de_mach_search_posts_item")
                                  .find(".irs-to")
                                  .text(),
                                irs_from = jQuery(this)
                                  .closest(".et_pb_de_mach_search_posts_item")
                                  .find(".irs-from")
                                  .text();
                              var value = jQuery(this)
                                .find("option:selected")
                                .text();
                              divi_filter_params(
                                type,
                                sub_val.taxonomy,
                                value,
                                name,
                                filter_param_type,
                                iris_to,
                                irs_from
                              );
                            }
                          }
                        } else {
                          if (
                            !jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .hasClass("uncheck_init_terms")
                          ) {
                            if (
                              jQuery(this)
                                .closest(".search_filter_cont")
                                .find('input[value="' + term_val + '"]')
                                .length > 0
                            ) {
                              jQuery(this)
                                .closest(".search_filter_cont")
                                .find('input[value="' + term_val + '"]')
                                .attr("checked", "checked");
                              if (
                                jQuery(this)
                                  .closest(".et_pb_de_mach_search_posts_item")
                                  .hasClass("filter_params")
                              ) {
                                if (
                                  jQuery(this)
                                    .closest(".et_pb_de_mach_search_posts_item")
                                    .hasClass("filter_params_yes_title")
                                ) {
                                  var filter_param_type = "title";
                                } else {
                                  var filter_param_type = "no-title";
                                }
                                var type = jQuery(this).attr("data-field_type"),
                                  name = jQuery(this)
                                    .closest(".et_pb_de_mach_search_posts_item")
                                    .find(".et_pb_contact_field_options_title ")
                                    .html(),
                                  iris_to = jQuery(this)
                                    .closest(".et_pb_de_mach_search_posts_item")
                                    .find(".irs-to")
                                    .text(),
                                  irs_from = jQuery(this)
                                    .closest(".et_pb_de_mach_search_posts_item")
                                    .find(".irs-from")
                                    .text();
                                var value = jQuery(this)
                                  .closest(".search_filter_cont")
                                  .find('input[value="' + term_val + '"]')
                                  .parent()
                                  .find(".radio-label")
                                  .attr("title");
                                divi_filter_params(
                                  type,
                                  sub_val.taxonomy,
                                  value,
                                  name,
                                  filter_param_type,
                                  iris_to,
                                  irs_from
                                );
                                return false;
                              }
                            }
                          }
                        }
                      }
                    );
                  }
                });
                // Get all values of elements that having data-name attribute as sub_val.taxonomy
                var element_values = [];
                if (
                  jQuery('[data-name="' + sub_val.taxonomy + '"]').length > 0
                ) {
                  jQuery('[data-name="' + sub_val.taxonomy + '"]').each(
                    function () {
                      if (
                        jQuery(this).is('input[type="radio"]') ||
                        jQuery(this).is('input[type="checkbox"]')
                      ) {
                        var val = jQuery(this).val();
                        if (val != "") {
                          element_values.push(val);
                        }
                      }
                    }
                  );

                  if (sub_val.terms.length == element_values.length) {
                    sub_val.terms.sort();
                    element_values.sort();
                    var is_same = sub_val.terms.every(function (
                      element,
                      index
                    ) {
                      return element === element_values[index];
                    });

                    if (is_same) {
                      if (
                        jQuery(
                          '.option-all[data-name="' + sub_val.taxonomy + '"]'
                        ).length > 0
                      ) {
                        // uncheck all other options and check option_all only
                        jQuery(
                          '[data-name="' + sub_val.taxonomy + '"]'
                        ).removeAttr("checked");
                        jQuery(
                          '[data-name="' + sub_val.taxonomy + '"]'
                        ).removeProp("checked");
                        jQuery(
                          '.option-all[data-name="' + sub_val.taxonomy + '"]'
                        ).attr("checked", "checked");
                        jQuery(
                          '.option-all[data-name="' + sub_val.taxonomy + '"]'
                        ).prop("checked", "checked");
                      }
                    }
                  }
                }
              } else {
                var term_val = sub_val.terms;
                jQuery('[data-name="' + sub_val.taxonomy + '"]').each(
                  function () {
                    if (jQuery(this).is("select")) {
                      if (
                        jQuery(this).find('option[value="' + term_val + '"]')
                          .length > 0
                      ) {
                        jQuery(this).find("option").removeProp("selected");
                        jQuery(this)
                          .find('option[value="' + term_val + '"]')
                          .prop("selected", true);
                        if (
                          jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .hasClass("filter_params")
                        ) {
                          if (
                            jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .hasClass("filter_params_yes_title")
                          ) {
                            var filter_param_type = "title";
                          } else {
                            var filter_param_type = "no-title";
                          }
                          var type = jQuery(this).attr("data-field_type"),
                            name = jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .find(".et_pb_contact_field_options_title ")
                              .html(),
                            iris_to = jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .find(".irs-to")
                              .text(),
                            irs_from = jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .find(".irs-from")
                              .text();
                          var value = jQuery(this)
                            .find("option:selected")
                            .text();
                          divi_filter_params(
                            type,
                            sub_val.taxonomy,
                            value,
                            name,
                            filter_param_type,
                            iris_to,
                            irs_from
                          );
                        }
                      }
                    } else {
                      if (
                        !jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .hasClass("uncheck_init_terms")
                      ) {
                        if (
                          jQuery(this)
                            .closest(".search_filter_cont")
                            .find('input[value="' + term_val + '"]').length > 0
                        ) {
                          jQuery(this)
                            .closest(".search_filter_cont")
                            .find('input[value="' + term_val + '"]')
                            .attr("checked", "checked");
                          if (
                            jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .hasClass("filter_params")
                          ) {
                            if (
                              jQuery(this)
                                .closest(".et_pb_de_mach_search_posts_item")
                                .hasClass("filter_params_yes_title")
                            ) {
                              var filter_param_type = "title";
                            } else {
                              var filter_param_type = "no-title";
                            }
                            var type = jQuery(this).attr("data-field_type"),
                              name = jQuery(this)
                                .closest(".et_pb_de_mach_search_posts_item")
                                .find(".et_pb_contact_field_options_title ")
                                .html(),
                              iris_to = jQuery(this)
                                .closest(".et_pb_de_mach_search_posts_item")
                                .find(".irs-to")
                                .text(),
                              irs_from = jQuery(this)
                                .closest(".et_pb_de_mach_search_posts_item")
                                .find(".irs-from")
                                .text();
                            var value = jQuery(this)
                              .closest(".search_filter_cont")
                              .find('input[value="' + term_val + '"]')
                              .parent()
                              .find(".radio-label")
                              .attr("title");
                            divi_filter_params(
                              type,
                              sub_val.taxonomy,
                              value,
                              name,
                              filter_param_type,
                              iris_to,
                              irs_from
                            );
                            return false;
                          }
                        }
                      }
                    }
                  }
                );
              }
            }
          });
        } else if (
          typeof val == "object" &&
          typeof val.taxonomy != "undefined"
        ) {
          if (Array.isArray(val.terms)) {
            jQuery.each(val.terms, function (term_index, term_val) {
              if (jQuery('[data-name="' + val.taxonomy + '"]').length > 0) {
                jQuery('[data-name="' + val.taxonomy + '"]').each(function () {
                  if (jQuery(this).is("select")) {
                    if (
                      jQuery(this).find('option[value="' + term_val + '"]')
                        .length > 0
                    ) {
                      jQuery(this).find("option").removeProp("selected");
                      jQuery(this)
                        .find('option[value="' + term_val + '"]')
                        .prop("selected", true);
                      if (
                        jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .hasClass("filter_params")
                      ) {
                        if (
                          jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .hasClass("filter_params_yes_title")
                        ) {
                          var filter_param_type = "title";
                        } else {
                          var filter_param_type = "no-title";
                        }
                        var type = jQuery(this).attr("data-field_type"),
                          name = jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .find(".et_pb_contact_field_options_title ")
                            .html(),
                          iris_to = jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .find(".irs-to")
                            .text(),
                          irs_from = jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .find(".irs-from")
                            .text();
                        var value = jQuery(this).find("option:selected").text();
                        divi_filter_params(
                          type,
                          val.taxonomy,
                          value,
                          name,
                          filter_param_type,
                          iris_to,
                          irs_from
                        );
                      }
                    }
                  } else {
                    if (
                      !jQuery(this)
                        .closest(".et_pb_de_mach_search_posts_item")
                        .hasClass("uncheck_init_terms")
                    ) {
                      if (
                        jQuery(this)
                          .closest(".search_filter_cont")
                          .find('input[value="' + term_val + '"]').length > 0
                      ) {
                        jQuery(this)
                          .closest(".search_filter_cont")
                          .find('input[value="' + term_val + '"]')
                          .attr("checked", "checked");
                        if (
                          jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .hasClass("filter_params")
                        ) {
                          if (
                            jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .hasClass("filter_params_yes_title")
                          ) {
                            var filter_param_type = "title";
                          } else {
                            var filter_param_type = "no-title";
                          }
                          var type = jQuery(this).attr("data-field_type"),
                            name = jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .find(".et_pb_contact_field_options_title ")
                              .html(),
                            iris_to = jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .find(".irs-to")
                              .text(),
                            irs_from = jQuery(this)
                              .closest(".et_pb_de_mach_search_posts_item")
                              .find(".irs-from")
                              .text();
                          var value = jQuery(this)
                            .closest(".search_filter_cont")
                            .find('input[value="' + term_val + '"]')
                            .parent()
                            .find(".radio-label")
                            .attr("title");
                          divi_filter_params(
                            type,
                            val.taxonomy,
                            value,
                            name,
                            filter_param_type,
                            iris_to,
                            irs_from
                          );
                          return false;
                        }
                      }
                    }
                  }
                });
              }
            });
          } else {
            if (jQuery('[data-name="' + val.taxonomy + '"]').length > 0) {
              jQuery('[data-name="' + val.taxonomy + '"]').each(function () {
                if (jQuery(this).is("select")) {
                  if (
                    jQuery(this).find('option[value="' + val.terms + '"]')
                      .length > 0
                  ) {
                    jQuery(this).find("option").removeProp("selected");
                    jQuery(this)
                      .find('option[value="' + val.terms + '"]')
                      .prop("selected", true);
                    if (
                      jQuery(this)
                        .closest(".et_pb_de_mach_search_posts_item")
                        .hasClass("filter_params")
                    ) {
                      if (
                        jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .hasClass("filter_params_yes_title")
                      ) {
                        var filter_param_type = "title";
                      } else {
                        var filter_param_type = "no-title";
                      }
                      var type = jQuery(this).attr("data-field_type"),
                        name = jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .find(".et_pb_contact_field_options_title ")
                          .html(),
                        iris_to = jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .find(".irs-to")
                          .text(),
                        irs_from = jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .find(".irs-from")
                          .text();
                      var value = jQuery(this).find("option:selected").text();
                      divi_filter_params(
                        type,
                        val.taxonomy,
                        value,
                        name,
                        filter_param_type,
                        iris_to,
                        irs_from
                      );
                    }
                  }
                } else {
                  if (
                    !jQuery(this)
                      .closest(".et_pb_de_mach_search_posts_item")
                      .hasClass("uncheck_init_terms")
                  ) {
                    if (
                      jQuery(this)
                        .closest(".search_filter_cont")
                        .find('input[value="' + val.terms + '"]').length > 0
                    ) {
                      jQuery(this)
                        .closest(".search_filter_cont")
                        .find('input[value="' + val.terms + '"]')
                        .attr("checked", "checked");
                      if (
                        jQuery(this)
                          .closest(".et_pb_de_mach_search_posts_item")
                          .hasClass("filter_params")
                      ) {
                        if (
                          jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .hasClass("filter_params_yes_title")
                        ) {
                          var filter_param_type = "title";
                        } else {
                          var filter_param_type = "no-title";
                        }
                        var type = jQuery(this).attr("data-field_type"),
                          name = jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .find(".et_pb_contact_field_options_title ")
                            .html(),
                          iris_to = jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .find(".irs-to")
                            .text(),
                          irs_from = jQuery(this)
                            .closest(".et_pb_de_mach_search_posts_item")
                            .find(".irs-from")
                            .text();
                        var value = jQuery(this)
                          .closest(".search_filter_cont")
                          .find('input[value="' + val.terms + '"]')
                          .parent()
                          .find(".radio-label")
                          .attr("title");
                        divi_filter_params(
                          type,
                          val.taxonomy,
                          value,
                          name,
                          filter_param_type,
                          iris_to,
                          irs_from
                        );
                        return false;
                      }
                    }
                  }
                }
              });
            }
          }
        }
      });
    }
  }
}

function removeChildFields(obj) {
  var current_filter_id = obj.closest(".search_filter_cont").attr("id");
  if (obj.closest(".search_filter_cont").data("type") == "category") {
    jQuery(".search_filter_cont[data-conditional-logic]").each(function () {
      var _this = jQuery(this);
      var logic_rule = _this.data("conditional-logic");
      //var logic_rule_set = JSON.parse( logic_rule );
      var logic_relation = _this.data("conditional-relation");
      // Check this is conditional category
      if (_this.data("type") == "category") {
        var top_category_is_not_empty = false;
        var top_category_is_not = false;
        var top_category;
        jQuery.each(logic_rule, function (ind, rule) {
          var condition_field = jQuery("#" + rule[0]);
          if (current_filter_id == rule[0]) {
            top_category = condition_field;
            if (rule[1] == "is not") {
              top_category_is_not = true;
            }
            if (rule[1] == "is not empty") {
              top_category_is_not_empty = true;
            }
          }
        });

        // This is conditional subcategory
        if (
          logic_relation == "all" &&
          top_category_is_not == true &&
          top_category_is_not_empty == true
        ) {
          _this.find(".divi-filter-item").html("");
          _this.find(".et_pb_contact_field_options_list").html("");
          _this.closest(".et_pb_de_mach_search_posts_item").hide();

          if (_this.hasClass("condition-field")) {
            removeChildFields(_this.find(".divi-filter-item"));
          }
        }
      }
    });
  }
}

function handle_conditional_fields(obj = null) {
  if (obj != null) {
    removeChildFields(obj);
  }
  var load_conditional_ajax = false;
  jQuery(".search_filter_cont[data-conditional-logic]").each(function () {
    var _this = jQuery(this);
    var logic_rule = _this.data("conditional-logic");
    //var logic_rule_set = JSON.parse( logic_rule );
    var logic_relation = _this.data("conditional-relation");
    var is_condition = false;
    var rule_conditions = [];
    var is_category_show = false;
    var is_category_condition = false;
    var can_check = false;

    if (obj != null) {
      jQuery.each(logic_rule, function (ind, rule) {
        if (rule[0] == obj.closest(".search_filter_cont").attr("id")) {
          can_check = true;
        }
      });
    } else {
      can_check = true;
    }

    if (can_check == true) {
      // Check this is conditional category
      if (
        _this.data("type") == "category" ||
        _this.data("type") == "taxonomy"
      ) {
        var top_category_is_not_empty = false;
        var top_category_is_not = false;
        var top_category;

        var changed_cat_id = "";
        if (
          obj != null &&
          (obj.closest(".search_filter_cont").data("type") == "category" ||
            obj.closest(".search_filter_cont").data("type") == "taxonomy")
        ) {
          changed_cat_id = obj.closest(".search_filter_cont").attr("id");
        }
        jQuery.each(logic_rule, function (ind, rule) {
          var condition_field = jQuery("#" + rule[0]);
          condition_field.addClass("condition-field");
          if (
            (changed_cat_id != "" && rule[0] == changed_cat_id) ||
            (obj == null &&
              (condition_field.data("type") == "category" ||
                condition_field.data("type") == "taxonomy"))
          ) {
            top_category = condition_field;
            if (rule[1] == "is not") {
              top_category_is_not = true;
            }
            if (rule[1] == "is not empty") {
              top_category_is_not_empty = true;
            }
          }
        });

        // This is conditional subcategory
        if (
          logic_relation == "all" &&
          top_category_is_not == true &&
          top_category_is_not_empty == true
        ) {
          var parent_val = null;
          var field_type = top_category
            .find(".et_pb_contact_field")
            .data("type");
          var parent_has_child = "";
          switch (field_type) {
            case "select":
              parent_val = top_category
                .find(".et_pb_contact_field select option:selected")
                .eq(0)
                .val();
              parent_has_child = top_category
                .find(".et_pb_contact_field select option:selected")
                .eq(0)
                .data("type");
              break;
            case "checkbox":
            case "radio":
              parent_val = top_category.find("input:checked").eq(0).val();
              parent_has_child = top_category
                .find("input:checked")
                .eq(0)
                .data("type");
              break;
          }

          is_category_condition = true;

          if (
            typeof parent_val != "undefined" &&
            parent_val != "" &&
            parent_has_child == "has-child"
          ) {
            _this.find(".divi-filter-item").html("");
            _this.find(".et_pb_contact_field_options_list").html("");
            _this.closest(".et_pb_de_mach_search_posts_item").hide();
            _this
              .closest(".et_pb_de_mach_search_posts_item")
              .addClass("conditional_hide");

            is_category_show = true;
            var filter_count = "off";
            var query = "";
            var taxonomy_name = "";
            if (field_type == "radio" || field_type == "checkbox") {
              taxonomy_name = top_category
                .find(".et_pb_contact_field_options_list")
                .data("filter-name");
            } else if (field_type == "select") {
              taxonomy_name = top_category
                .find(".et_pb_contact_field")
                .data("filter-name");
            }
            if (_this.data("field-type") == "radio") {
              filter_count = _this
                .find(".et_pb_contact_field_options_list")
                .data("filter-count");
              if (filter_count == "on") {
                query = jQuery(".divi-filter-archive-loop.main-loop").attr(
                  "data-filter-var"
                );
              }
            }

            if (typeof get_sub_cat_ajax != "undefined") {
              get_sub_cat_ajax.abort();
            }

            var data = {
              action: "divi_filter_get_sub_category_handler",
              security: filter_ajax_object.security,
              top_category: parent_val,
              tax_key: taxonomy_name,
              field_type: _this.data("field-type"),
              child_mode: _this.data("child-mode"),
              hide_empty: _this.data("hide-empty"),
              post_type: _this.data("post-type"),
              select_placeholder: _this.data("select-placeholder"),
              sub_prefix: _this.data("sub-prefix"),
              show_available: _this.data("show-available"),
              radio_all_hide: _this.data("radio-all-hide"),
              radio_select: _this.data("radio-select"),
              radio_style: _this.data("radio-style"),
              radio_all_text: _this.data("radio-all-text"),
              filter_count: filter_count,
              query: query,
            };

            load_conditional_ajax = true;

            get_sub_cat_ajax = jQuery.ajax({
              url: filter_ajax_object.ajax_url,
              data: data,
              type: "POST",
              beforeSend: function (xhr) {
                jQuery(".divi-acf").attr("disabled", "disabled");
                jQuery(
                  ".et_pb_de_mach_search_posts_item,.et_pb_de_mach_orderby,.divi-filter-result-count"
                ).animate({ opacity: 0.5 }, 250);
                jQuery(".divi-acf.js-range-slider").each(function () {
                  var irs_data = jQuery(this).data("ionRangeSlider");
                  if (typeof irs_data != "undefined") {
                    irs_data.update({ from_fixed: true, to_fixed: true });
                  }
                });
              },
              success: function (data) {
                if (_this.data("field-type") == "select") {
                  _this.find(".divi-filter-item").html(data);
                } else {
                  _this.find(".et_pb_contact_field_options_list").html(data);
                }
                if (data == "") {
                  _this.closest(".et_pb_de_mach_search_posts_item").hide();
                  _this
                    .closest(".et_pb_de_mach_search_posts_item")
                    .addClass("conditional_hide");
                } else {
                  _this.closest(".et_pb_de_mach_search_posts_item").show();
                  _this
                    .closest(".et_pb_de_mach_search_posts_item")
                    .removeClass("conditional_hide");
                }
                jQuery(".divi-acf").removeAttr("disabled");
                jQuery(".divi-acf").removeProp("disabled");
                jQuery(
                  ".et_pb_de_mach_search_posts_item,.et_pb_de_mach_orderby,.divi-filter-result-count"
                ).animate({ opacity: 1 }, 250);
                jQuery(".divi-acf.js-range-slider").each(function () {
                  var irs_data = jQuery(this).data("ionRangeSlider");
                  if (typeof irs_data != "undefined") {
                    irs_data.update({ from_fixed: false, to_fixed: false });
                  }
                });
                if (is_first_load) {
                  init_filter_params();
                  is_first_load = false;
                }
              },
            });
          } else {
            _this.find(".divi-filter-item").html("");
            _this.find(".et_pb_contact_field_options_list").html("");
            _this.closest(".et_pb_de_mach_search_posts_item").hide();
            _this
              .closest(".et_pb_de_mach_search_posts_item")
              .addClass("conditional_hide");
          }
        } else {
          /* if (typeof top_category != 'undefined') {
            _this.find('.divi-filter-item').html("");
            _this.find('.et_pb_contact_field_options_list').html("");
          } */
          _this.closest(".et_pb_de_mach_search_posts_item").hide();
          _this
            .closest(".et_pb_de_mach_search_posts_item")
            .addClass("conditional_hide");
        }
      }

      if (is_category_condition != true) {
        jQuery.each(logic_rule, function (ind, rule) {
          var rule_condition = false;
          var condition_field = jQuery("#" + rule[0]);
          condition_field.addClass("condition-field");
          var field_type = condition_field
            .find(".et_pb_contact_field")
            .data("filtertype");
          var field_val = "";
          var condition_val = rule[2];
          switch (field_type) {
            case "select":
              field_val = condition_field
                .find(".et_pb_contact_field select")
                .val();
              break;
            case "checkbox":
            case "radio":
              field_val = [];
              condition_field.find("input:checked").each(function () {
                field_val.push(jQuery(this).val());
              });
              break;
            case "range":
              var rangeData = condition_field
                .find(".js-range-slider")
                .data("ionRangeSlider");
              if (typeof rangeData !== "undefined") {
                field_val = [rangeData.result.from, rangeData.result.to];
              }
              break;
            case "input":
              field_val = condition_field.find("input").val();
              break;
          }

          if (!field_val) {
            field_val = "";
          }

          switch (rule[1]) {
            case "is":
              if (Array.isArray(field_val)) {
                rule_condition = field_val.includes(condition_val);
              } else {
                rule_condition = field_val == condition_val;
              }
              break;
            case "is not":
              if (Array.isArray(field_val)) {
                rule_condition = !field_val.includes(condition_val);
              } else {
                rule_condition = field_val != condition_val;
              }
              break;
            case "is greater":
              if (!jQuery.isNumeric(condition_val)) {
                rule_condition = false;
              } else {
                if (Array.isArray(field_val)) {
                  for (i = 0; i < field_val.size; i++) {
                    if (
                      jQuery.isNumeric(field_val[i]) &&
                      field_val[i] > condition_val
                    ) {
                      rule_condition = true;
                    }
                  }
                } else {
                  rule_condition =
                    jQuery.isNumeric(field_val) && field_val > condition_val;
                }
              }
              break;
            case "is less":
              if (!jQuery.isNumeric(condition_val)) {
                rule_condition = false;
              } else {
                if (Array.isArray(field_val)) {
                  for (i = 0; i < field_val.size; i++) {
                    if (
                      jQuery.isNumeric(field_val[i]) &&
                      field_val[i] < condition_val
                    ) {
                      rule_condition = true;
                    }
                  }
                } else {
                  rule_condition =
                    jQuery.isNumeric(field_val) && field_val < condition_val;
                }
              }
              break;
            case "contains":
              if (Array.isArray(field_val)) {
                for (i = 0; i < field_val.size; i++) {
                  if (field_val[i].indexOf(condition_val) != -1) {
                    rule_condition = true;
                  }
                }
              } else {
                rule_condition = field_val.indexOf(condition_val) != -1;
              }
              break;
            case "does not contain":
              if (Array.isArray(field_val)) {
                for (i = 0; i < field_val.length; i++) {
                  if (field_val[i].indexOf(condition_val) == -1) {
                    rule_condition = true;
                  }
                }
              } else {
                rule_condition = field_val.indexOf(condition_val) == -1;
              }
              break;
            case "is empty":
              if (Array.isArray(field_val)) {
                if (field_val.length == 0) {
                  rule_condition = true;
                } else {
                  rule_condition = false;
                }
              } else {
                rule_condition = field_val == "";
              }
              break;
            case "is not empty":
              if (Array.isArray(field_val)) {
                if (field_val.length == 0) {
                  rule_condition = false;
                } else {
                  jQuery.each(field_val, function (t, val) {
                    if (val != "") {
                      rule_condition = true;
                    }
                  });
                }
              } else {
                rule_condition = field_val != "";
              }
              break;
          }

          rule_conditions.push(rule_condition);
        });

        if (logic_relation == "any") {
          if (rule_conditions.includes(true)) {
            is_condition = true;
          }
        } else {
          if (!rule_conditions.includes(false)) {
            is_condition = true;
          }
        }

        if (is_condition == true) {
          if (is_category_condition == false) {
            _this.closest(".et_pb_de_mach_search_posts_item").show();
            _this
              .closest(".et_pb_de_mach_search_posts_item")
              .removeClass("conditional_hide");
          }
        } else {
          _this.closest(".et_pb_de_mach_search_posts_item").hide();
          _this
            .closest(".et_pb_de_mach_search_posts_item")
            .addClass("conditional_hide");
        }
      }
    }
  });
  if (
    load_conditional_ajax == false &&
    is_first_load &&
    reset_filter_clicked == false
  ) {
    init_filter_params();
    //is_first_load = false;
  }
}

function show_filter_counts() {
  var filter_count_options = [];
  var filter_types = [];
  var filter_parents = [];

  var filter_has_current_tax_term = false;

  var $module_featured_posts = jQuery(".divi-filter-archive-loop.main-loop"),
    post_var = $module_featured_posts.attr("data-filter-var");

  var current_loop_taxonomy = $module_featured_posts.data("current-taxonomy");
  var current_loop_taxterm = $module_featured_posts.data("current-taxterm");
  var has_default_tax = false;
  if (
    typeof current_loop_taxonomy != "undefined" &&
    current_loop_taxonomy != "" &&
    typeof current_loop_taxterm != "undefined" &&
    current_loop_taxterm != ""
  ) {
    has_default_tax = true;
  }

  var is_onload =
    jQuery("#divi_filter").attr("data-onload") != "undefined" &&
    jQuery("#divi_filter").attr("data-onload") == "true"
      ? true
      : false;
  var count_self_attr = jQuery("#divi_filter").attr("data-countself");

  var count_self =
    typeof count_self_attr != "undefined" ? count_self_attr : "on";

  var filter_taxonomy_categorizing = {};

  jQuery(".search_filter_cont").each(function () {
    var filterType = jQuery(this)
      .find(".et_pb_contact_field")
      .attr("data-filtertype");
    var filter_option = "";
    if (filterType == "radio") {
      var $option_list = jQuery(this).find(".et_pb_contact_field_options_list");
      if ($option_list.attr("data-filter-count") == "on") {
        filter_option = $option_list.attr("data-filter-name");
        filter_count_options.push($option_list.attr("data-filter-name"));
        var data_cat_parent = $option_list.attr("data-parent-cat");

        if (
          typeof data_cat_parent !== typeof undefined &&
          data_cat_parent !== false
        ) {
          filter_parents.push(data_cat_parent);
        } else {
          filter_parents.push("");
        }
        if ($option_list.hasClass("divi-checkboxmulti")) {
          filter_types.push("multi");
        } else {
          filter_types.push("single");
        }
      }
    } else if (filterType == "select") {
      if (
        jQuery(this).find(".et_pb_contact_field").attr("data-filter-count") ==
        "on"
      ) {
        filter_option = jQuery(this)
          .find(".et_pb_contact_field")
          .attr("data-filter-name");
        filter_count_options.push(
          jQuery(this).find(".et_pb_contact_field").attr("data-filter-name")
        );
        filter_parents.push("");
        filter_types.push("single");
      }
    }

    if (
      typeof jQuery(this).data("categorizing-taxonomy") != "undefined" &&
      jQuery(this).data("categorizing-taxonomy") != ""
    ) {
      filter_taxonomy_categorizing[filter_option] = jQuery(this).data(
        "categorizing-taxonomy"
      );
    }

    jQuery(this)
      .find(".divi-acf")
      .each(function (i, obj) {
        var filter_item_name = jQuery(this).data("name"),
          input_type = jQuery(this).attr("data-filtertype");

        //////////////// CHECKBOX
        if (
          input_type == "divi-checkboxsingle" ||
          input_type == "divi-checkboxmulti" ||
          input_type == "customcategory"
        ) {
          if (jQuery(this).is("select")) {
            if (filter_item_name == current_loop_taxonomy) {
              jQuery(this)
                .find("option")
                .each(function () {
                  if (jQuery(this).attr("value") == current_loop_taxterm) {
                    filter_has_current_tax_term = true;
                  }
                });
            }
          } else {
            var parent = jQuery(this).closest(
              ".et_pb_contact_field_options_list"
            );
            if (filter_item_name == current_loop_taxonomy) {
              parent.find("input").each(function () {
                if (jQuery(this).val() == current_loop_taxterm) {
                  filter_has_current_tax_term = true;
                }
              });
            }
          }
        }
      });
  });

  if (filter_count_options.length > 0) {
    var data = {
      action: "divi_filter_get_count_ajax_handler",
      security: filter_ajax_object.security,
      query: post_var,
      filters: filter_count_options.join(","),
      filter_types: filter_types.join(","),
      filter_parents: filter_parents.join(","),
      filter_has_current_tax_term: filter_has_current_tax_term,
      filter_taxonomy_categorizing: filter_taxonomy_categorizing,
      has_default_tax: has_default_tax,
      count_self: count_self,
    };

    jQuery.ajax({
      url: filter_ajax_object.ajax_url, // AJAX handler
      data: data,
      type: "POST",
      dataType: "JSON",
      beforeSend: function (xhr) {
        jQuery(".divi-acf").attr("disabled", "disabled");
        jQuery(
          ".et_pb_de_mach_search_posts_item:not(.conditional_hide),.et_pb_de_mach_orderby,.divi-filter-result-count"
        ).animate({ opacity: 0.5 }, 250);
        jQuery(".divi-acf.js-range-slider").each(function () {
          var irs_data = jQuery(this).data("ionRangeSlider");
          if (typeof irs_data != "undefined") {
            irs_data.update({ from_fixed: true, to_fixed: true });
          }
        });
      },
      success: function (data) {
        jQuery(".divi-acf").removeProp("disabled");
        jQuery(".divi-acf").removeAttr("disabled");
        jQuery(
          ".et_pb_de_mach_search_posts_item:not(.conditional_hide),.et_pb_de_mach_orderby,.divi-filter-result-count"
        ).animate({ opacity: 1 }, 250);
        jQuery(".divi-filter-archive-loop.main-loop")
          .closest(".filtered-posts-cont")
          .find(".ajax-loading")
          .remove();
        jQuery(".divi-acf.js-range-slider").each(function () {
          var irs_data = jQuery(this).data("ionRangeSlider");
          if (typeof irs_data != "undefined") {
            irs_data.update({ from_fixed: false, to_fixed: false });
          }
        });
        jQuery(".search_filter_cont").each(function () {
          var $module = jQuery(this).closest(
            ".et_pb_de_mach_search_posts_item"
          );
          var hide_module_for_empty = $module.hasClass("hide_module_for_empty");
          var hide_empty_onload = $module.hasClass("hide_empty_on_load");
          var origin_show_count = !$module.hasClass("hide_show_count");
          var duplicate_filter_count = $module.hasClass(
            "duplication_filter_count"
          );
          var duplication_filter_count_parent = $module.hasClass(
            "duplication_filter_count_parent"
          );
          if (!$module.hasClass("conditional_hide")) {
            $module.show();
          }
          if (
            jQuery(this).find('.et_pb_contact_field[data-filtertype="radio"]')
              .length > 0
          ) {
            var $option_list = jQuery(this).find(
              ".et_pb_contact_field_options_list"
            );
            if (
              (hide_empty_onload && is_first_load) ||
              $option_list.attr("data-filter-count") == "on"
            ) {
              var filter_option = $option_list.attr("data-filter-name");
              var show_empty = $option_list.hasClass("show-empty");
              //var hide_empty_onload = ($option_list.attr('data-hide-empty-onload') == 'on');
              $option_list
                .find("span.et_pb_contact_field_radio")
                .each(function () {
                  var data_val = jQuery(this)
                    .find("label.radio-label")
                    .attr("data-value");
                  if (typeof data[filter_option][data_val] != "undefined") {
                    //jQuery(this).removeClass('empty');
                    if (data[filter_option][data_val] == "0") {
                      if (is_first_load && hide_empty_onload) {
                        jQuery(this).remove();
                      } else {
                        jQuery(this).addClass("empty");
                      }
                    } else {
                      jQuery(this).removeClass("empty");
                    }

                    if (origin_show_count) {
                      if (jQuery(this).find("span.radio-count").length > 0) {
                        jQuery(this)
                          .find("span.radio-count")
                          .html(data[filter_option][data_val]);
                      } else {
                        jQuery(this).append(
                          '<span class="radio-count">' +
                            data[filter_option][data_val] +
                            "</span>"
                        );
                      }
                    }
                  } else {
                    if (is_first_load && hide_empty_onload) {
                      jQuery(this).remove();
                    } else {
                      jQuery(this).addClass("empty");
                    }
                  }
                });

              if ($option_list.find(".post_obj_sub_cat").length > 0) {
                $option_list.find(".post_obj_sub_cat").each(function () {
                  var sub_option_counts = 0;
                  jQuery(this)
                    .find(".et_pb_contact_field_radio")
                    .each(function () {
                      if (
                        !jQuery(this)
                          .find("input")
                          .hasClass("post-object-taxonomy")
                      ) {
                        sub_option_counts =
                          sub_option_counts +
                          parseInt(jQuery(this).find(".radio-count").html());
                      }
                    });

                  jQuery(this)
                    .find(".post-object-taxonomy")
                    .parent()
                    .find(".radio-count")
                    .html(sub_option_counts);
                });
              } else {
                if (duplication_filter_count_parent) {
                  $option_list.find(".is-collapsible").each(function () {
                    var parent_cat_id = jQuery(this).attr("data_cat_id");
                    var sub_option_counts = 0;
                    $option_list
                      .find(
                        '.et_pb_contact_field_radio[data_parent_cat_id="' +
                          parent_cat_id +
                          '"]'
                      )
                      .each(function () {
                        if (jQuery(this).attr("data_cat_id") != parent_cat_id) {
                          sub_option_counts =
                            sub_option_counts +
                            parseInt(jQuery(this).find(".radio-count").html());
                        }
                      });

                    //jQuery(this).find('.radio-count').html( sub_option_counts );
                    $option_list
                      .find(
                        '.et_pb_contact_field_radio[data_cat_id="' +
                          parent_cat_id +
                          '"]'
                      )
                      .find(".radio-count")
                      .html(sub_option_counts);
                  });
                }

                if (
                  $option_list.find(".is-collapse").length == 0 &&
                  duplicate_filter_count
                ) {
                  var sub_option_counts = 0;
                  $option_list
                    .find(".et_pb_contact_field_radio")
                    .each(function () {
                      if (!jQuery(this).find("input").hasClass("option-all")) {
                        sub_option_counts =
                          sub_option_counts +
                          parseInt(jQuery(this).find(".radio-count").html());
                      }
                    });
                  $option_list
                    .find(".et_pb_contact_field_radio .option-all")
                    .closest(".et_pb_contact_field_radio")
                    .find(".radio-count")
                    .html(sub_option_counts);
                }
              }

              if (
                $option_list.find("span.et_pb_contact_field_radio:not(.empty)")
                  .length == 0
              ) {
                if (hide_module_for_empty) {
                  jQuery(this)
                    .closest(".et_pb_de_mach_search_posts_item")
                    .hide();
                }
              } else {
                if (
                  !jQuery(this)
                    .closest(".et_pb_de_mach_search_posts_item")
                    .hasClass("conditional_hide")
                ) {
                  jQuery(this)
                    .closest(".et_pb_de_mach_search_posts_item")
                    .show();
                }
                if (
                  $option_list.find(
                    "span.et_pb_contact_field_radio:not(.empty)"
                  ).length == 1 &&
                  $option_list
                    .find("span.et_pb_contact_field_radio:not(.empty)")
                    .eq(0)
                    .find("label")
                    .attr("data-value") == "all"
                ) {
                  if (hide_module_for_empty) {
                    jQuery(this)
                      .closest(".et_pb_de_mach_search_posts_item")
                      .hide();
                  }
                }
              }
            }
          } else if (
            jQuery(this).find('.et_pb_contact_field[data-filtertype="select"]')
              .length > 0
          ) {
            var filter_option = jQuery(this)
              .find(".et_pb_contact_field")
              .attr("data-filter-name");
            var show_empty = jQuery(this)
              .find(".et_pb_contact_field")
              .attr("data-show-empty");
            var select2_enabled = jQuery(this)
              .find("select")
              .hasClass("select2-hidden-accessible");
            //var hide_empty_onload = (jQuery(this).find('.et_pb_contact_field').attr('data-hide-empty-onload') == 'on');
            if (
              jQuery(this)
                .find(".et_pb_contact_field")
                .attr("data-filter-count") == "on"
            ) {
              jQuery(this)
                .find("select option")
                .each(function () {
                  var option_val = jQuery(this).val();
                  if (option_val != "") {
                    if (typeof data[filter_option][option_val] != "undefined") {
                      if (data[filter_option][option_val] == 0) {
                        if (is_first_load && hide_empty_onload) {
                          jQuery(this).remove();
                        } else if ("on" != show_empty) {
                          if (select2_enabled) {
                            jQuery(this).prop("disabled", "disabled");
                          } else {
                            jQuery(this).hide();
                          }
                        }
                      } else {
                        jQuery(this).show();
                        jQuery(this).removeProp("disabled");
                        jQuery(this).removeAttr("disabled");
                      }
                    } else {
                      if (is_first_load && hide_empty_onload) {
                        jQuery(this).remove();
                      } else if ("on" != show_empty) {
                        if (select2_enabled) {
                          jQuery(this).prop("disabled", "disabled");
                        } else {
                          jQuery(this).hide();
                        }
                      }
                    }
                  }
                });
              if (select2_enabled) {
                jQuery(this)
                  .find("select")
                  .select2("destroy")
                  .select2({ width: "100%" });
              }

              if (hide_module_for_empty) {
                var non_empty_exists = false;
                jQuery(this)
                  .find("select option")
                  .each(function () {
                    if (
                      jQuery(this).val() != "" &&
                      jQuery(this).val() != "all"
                    ) {
                      if (jQuery(this).css("display") != "none") {
                        non_empty_exists = true;
                      }
                    }
                  });

                if (!non_empty_exists) {
                  $module.hide();
                }
              }
            }
          }
        });

        jQuery("#divi_filter").removeAttr("data-onload");
        is_filtering = false;
        //is_first_load = false;
      },
    });
  } else {
    jQuery(".divi-acf").removeAttr("disabled");
    jQuery(".divi-acf").removeProp("disabled");
    jQuery(
      ".et_pb_de_mach_search_posts_item,.et_pb_de_mach_orderby,.divi-filter-result-count"
    ).animate({ opacity: 1 }, 250);
    jQuery(".divi-filter-archive-loop.main-loop")
      .closest(".filtered-posts-cont")
      .find(".ajax-loading")
      .remove();
  }
}

// function colcade_itmes() {
//  jQuery('.filtered-posts').masonry({
//  columnWidth : '.grid-sizer',
//   itemSelector: '.grid-item',
//     gutter : 15,
//     percentPosition : 'true',
//     fitWidth: true
// });
//  // jQuery('.filtered-posts').masonry('layout');
// }

var placeSearch;

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  //autocomplete = [];
  jQuery(".divi-acf-map").each(function () {
    var autocomplete = new google.maps.places.Autocomplete(this, {
      types: ["(regions)"],
    });

    // When the user selects an address from the dropdown, populate the address
    // fields in the form.
    autocomplete.addListener("place_changed", function () {
      var place = autocomplete.getPlace();
      jQuery(".map_address_lat").val(place.geometry.location.lat());
      jQuery(".map_address_lng").val(place.geometry.location.lng());
      if (
        jQuery(".map_address_lat")
          .closest(".et_pb_de_mach_filter_posts")
          .find(" > .et_pb_module_inner > div")
          .hasClass("updatetype-update_field")
      ) {
        filter_ajax_request.abort();
        filter_by_address = true;
        divi_find_filters_to_filter();
      }
    });
  });
}

// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
function geolocate(obj) {
  var _this = jQuery(obj);
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function (position) {
      var geolocation = {
        lat: position.coords.latitude,
        lng: position.coords.longitude,
      };
      getLocation(geolocation.lat, geolocation.lng, _this);
      var circle = new google.maps.Circle({
        center: geolocation,
        radius: position.coords.accuracy,
      });
      //autocomplete.setBounds(circle.getBounds());
    });
  }
}

function getLocation(lat, lng, obj) {
  var geocoder = new google.maps.Geocoder();
  var addressComponents = {};
  geocoder.geocode(
    {
      location: {
        lat: lat,
        lng: lng,
      },
    },
    function (results, status) {
      if (status === google.maps.GeocoderStatus.OK) {
        if (results[1]) {
          var result = results[0].address_components;

          for (var i = 0; i < result.length; i++) {
            if (result[i].types[0] == "route") {
              addressComponents.route = result[i].long_name;
            }
            if (result[i].types[0] == "street_number") {
              addressComponents.street_number = result[i].long_name;
            }
            if (result[i].types[0] == "locality") {
              addressComponents.locality = result[i].long_name;
            }
            if (result[i].types[0] == "postal_code") {
              addressComponents.postal_code = result[i].long_name;
            }
          }
          //callback(addressComponents);
          obj.val(results[0].formatted_address);
          obj.siblings(".map_address_lat").val(lat);
          obj.siblings(".map_address_lng").val(lng);
        } else {
          alert("No information found.");
        }
      }
    }
  );
}
